{
  "basePath": "/jsonapi",
  "paths": {
    "/media/image/{entity}/relationships/thumbnail": {"get": {
      "summary": "Relationship: thumbnail (File)",
      "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">thumbnail</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
      "responses": {"200": {
        "schema": {
          "type": "object",
          "properties": {"data": {
            "description": "The \"type\" and \"id\" to non-empty members.",
            "additionalProperties": false,
            "type": "object",
            "required": [
              "type",
              "id"
            ],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object",
                "properties": {}
              },
              "id": {
                "format": "uuid",
                "title": "Resource ID",
                "type": "string"
              },
              "type": {
                "title": "Resource type name",
                "type": "string",
                "enum": ["file--file"]
              }
            }
          }}
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the media image",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Media - Image"]
    }},
    "/paragraph/related_items/{entity}/relationships/field_related_items_ri": {"get": {
      "summary": "Relationship: field_related_items_ri (Media - Document)",
      "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the media--document resource type through the <em class=\"placeholder\">field_related_items_ri</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
      "responses": {"200": {
        "schema": {
          "type": "object",
          "properties": {"data": {
            "uniqueItems": true,
            "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
            "type": "array",
            "items": {
              "description": "The \"type\" and \"id\" to non-empty members.",
              "additionalProperties": false,
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "additionalProperties": true,
                  "type": "object",
                  "properties": {}
                },
                "id": {
                  "format": "uuid",
                  "title": "Resource ID",
                  "type": "string"
                },
                "type": {
                  "title": "Resource type name",
                  "type": "string",
                  "enum": ["media--document"]
                }
              }
            }
          }}
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the paragraph related_items",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Related Items"]
    }},
    "/path_alias/path_alias/{entity}": {"get": {
      "summary": "View (URL alias)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the path_alias--path_alias resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
      "responses": {"200": {
        "schema": {"$ref": "#/definitions/path_alias--path_alias"},
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the path_alias path_alias",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["URL alias"]
    }},
    "/paragraph/related_items/{entity}/field_related_items_ri": {"get": {
      "summary": "Related: field_related_items_ri (Media - Document)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the media--document resource type through the <em class=\"placeholder\">field_related_items_ri</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
      "responses": {"200": {
        "schema": {
          "description": "Describes the payload for 'media' entities of the 'document' bundle.",
          "additionalProperties": true,
          "title": "media:document Schema",
          "type": "object",
          "required": ["data"],
          "properties": {
            "jsonapi": {
              "description": "An object describing the server's implementation",
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "additionalProperties": true,
                  "type": "object"
                },
                "version": {"type": "string"}
              }
            },
            "data": {
              "type": "array",
              "items": {"$ref": "#/definitions/media--document--data"}
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "links": {
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": ["href"],
                "properties": {
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "href": {
                    "format": "uri - reference",
                    "description": "A string containing the link's URL . ",
                    "type": "string"
                  }
                }
              },
              "type": "object"
            }
          }
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the paragraph related_items",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Related Items"]
    }},
    "/paragraph/free_text/{entity}/relationships/paragraph_type": {"get": {
      "summary": "Relationship: paragraph_type (Paragraphs type)",
      "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the paragraphs_type--paragraphs_type resource type through the <em class=\"placeholder\">paragraph_type</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
      "responses": {"200": {
        "schema": {
          "type": "object",
          "properties": {"data": {
            "description": "The \"type\" and \"id\" to non-empty members.",
            "additionalProperties": false,
            "type": "object",
            "required": [
              "type",
              "id"
            ],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object",
                "properties": {}
              },
              "id": {
                "format": "uuid",
                "title": "Resource ID",
                "type": "string"
              },
              "type": {
                "title": "Resource type name",
                "type": "string",
                "enum": ["paragraphs_type--paragraphs_type"]
              }
            }
          }}
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the paragraph free_text",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Free text"]
    }},
    "/search_page/search_page": {"get": {
      "summary": "List (Search page)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the search_page--search_page resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
      "responses": {"200": {"description": "successful operation"}},
      "parameters": [
        {
          "in": "query",
          "name": "filter",
          "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "sort",
          "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "page",
          "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "include",
          "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Search page"]
    }},
    "/file/file/{entity}/relationships/uid": {"get": {
      "summary": "Relationship: uid (User)",
      "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
      "responses": {"200": {
        "schema": {
          "type": "object",
          "properties": {"data": {
            "description": "The \"type\" and \"id\" to non-empty members.",
            "additionalProperties": false,
            "type": "object",
            "required": [
              "type",
              "id"
            ],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object",
                "properties": {}
              },
              "id": {
                "format": "uuid",
                "title": "Resource ID",
                "type": "string"
              },
              "type": {
                "title": "Resource type name",
                "type": "string",
                "enum": ["user--user"]
              }
            }
          }}
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the file file",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["File"]
    }},
    "/media/document/{entity}/field_media_document": {"get": {
      "summary": "Related: field_media_document (File)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">field_media_document</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
      "responses": {"200": {
        "schema": {"$ref": "#/definitions/file--file"},
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the media document",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Media - Document"]
    }},
    "/paragraph/hero_slider/{entity}/relationships/field_hero_item": {"get": {
      "summary": "Relationship: field_hero_item (Paragraph - Hero)",
      "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the paragraph--hero resource type through the <em class=\"placeholder\">field_hero_item</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
      "responses": {"200": {
        "schema": {
          "type": "object",
          "properties": {"data": {
            "uniqueItems": true,
            "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
            "type": "array",
            "items": {
              "description": "The \"type\" and \"id\" to non-empty members.",
              "additionalProperties": false,
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "additionalProperties": true,
                  "type": "object",
                  "properties": {}
                },
                "id": {
                  "format": "uuid",
                  "title": "Resource ID",
                  "type": "string"
                },
                "type": {
                  "title": "Resource type name",
                  "type": "string",
                  "enum": ["paragraph--hero"]
                }
              }
            }
          }}
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the paragraph hero_slider",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Hero Slider"]
    }},
    "/menu_link_content/footer": {"get": {
      "summary": "List (Custom menu link - Footer)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the menu_link_content--footer resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
      "responses": {"200": {
        "schema": {
          "description": "Describes the payload for 'menu_link_content' entities of the 'footer' bundle.",
          "additionalProperties": true,
          "title": "menu_link_content:footer Schema",
          "type": "object",
          "required": ["data"],
          "properties": {
            "jsonapi": {
              "description": "An object describing the server's implementation",
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "additionalProperties": true,
                  "type": "object"
                },
                "version": {"type": "string"}
              }
            },
            "data": {
              "type": "array",
              "items": {"$ref": "#/definitions/menu_link_content--footer--data"}
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "links": {
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": ["href"],
                "properties": {
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "href": {
                    "format": "uri - reference",
                    "description": "A string containing the link's URL . ",
                    "type": "string"
                  }
                }
              },
              "type": "object"
            }
          }
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter",
          "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "sort",
          "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "page",
          "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "include",
          "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Custom menu link - Footer"]
    }},
    "/media/document/{entity}/relationships/field_category": {"get": {
      "summary": "Relationship: field_category (Taxonomy term - Tags)",
      "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the taxonomy_term--tags resource type through the <em class=\"placeholder\">field_category</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
      "responses": {"200": {
        "schema": {
          "type": "object",
          "properties": {"data": {
            "description": "The \"type\" and \"id\" to non-empty members.",
            "additionalProperties": false,
            "type": "object",
            "required": [
              "type",
              "id"
            ],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object",
                "properties": {}
              },
              "id": {
                "format": "uuid",
                "title": "Resource ID",
                "type": "string"
              },
              "type": {
                "title": "Resource type name",
                "type": "string",
                "enum": ["taxonomy_term--tags"]
              }
            }
          }}
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the media document",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Media - Document"]
    }},
    "/paragraph/multiple_column_item": {"get": {
      "summary": "List (Paragraph - Multiple Column Item)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the paragraph--multiple_column_item resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
      "responses": {"200": {
        "schema": {
          "description": "Describes the payload for 'paragraph' entities of the 'multiple_column_item' bundle.",
          "additionalProperties": true,
          "title": "paragraph:multiple_column_item Schema",
          "type": "object",
          "required": ["data"],
          "properties": {
            "jsonapi": {
              "description": "An object describing the server's implementation",
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "additionalProperties": true,
                  "type": "object"
                },
                "version": {"type": "string"}
              }
            },
            "data": {
              "type": "array",
              "items": {"$ref": "#/definitions/paragraph--multiple_column_item--data"}
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "links": {
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": ["href"],
                "properties": {
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "href": {
                    "format": "uri - reference",
                    "description": "A string containing the link's URL . ",
                    "type": "string"
                  }
                }
              },
              "type": "object"
            }
          }
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter",
          "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "sort",
          "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "page",
          "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "include",
          "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Multiple Column Item"]
    }},
    "/paragraph/cta/{entity}/field_media_cta": {"get": {
      "summary": "Related: field_media_cta (Media - Image)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the media--image resource type through the <em class=\"placeholder\">field_media_cta</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
      "responses": {"200": {
        "schema": {"$ref": "#/definitions/media--image"},
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the paragraph cta",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - CTA"]
    }},
    "/media/image/{entity}/field_media_image": {"get": {
      "summary": "Related: field_media_image (File)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">field_media_image</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
      "responses": {"200": {
        "schema": {"$ref": "#/definitions/file--file"},
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the media image",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Media - Image"]
    }},
    "/media/image/{entity}/thumbnail": {"get": {
      "summary": "Related: thumbnail (File)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">thumbnail</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
      "responses": {"200": {
        "schema": {"$ref": "#/definitions/file--file"},
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the media image",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Media - Image"]
    }},
    "/paragraph/text_media_box/{entity}/relationships/field_media_mediabox": {"get": {
      "summary": "Relationship: field_media_mediabox (Media - Image)",
      "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the media--image resource type through the <em class=\"placeholder\">field_media_mediabox</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
      "responses": {"200": {
        "schema": {
          "type": "object",
          "properties": {"data": {
            "description": "The \"type\" and \"id\" to non-empty members.",
            "additionalProperties": false,
            "type": "object",
            "required": [
              "type",
              "id"
            ],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object",
                "properties": {}
              },
              "id": {
                "format": "uuid",
                "title": "Resource ID",
                "type": "string"
              },
              "type": {
                "title": "Resource type name",
                "type": "string",
                "enum": ["media--image"]
              }
            }
          }}
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the paragraph text_media_box",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Text Media Box"]
    }},
    "/paragraph/cta": {"get": {
      "summary": "List (Paragraph - CTA)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the paragraph--cta resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
      "responses": {"200": {
        "schema": {
          "description": "Describes the payload for 'paragraph' entities of the 'cta' bundle.",
          "additionalProperties": true,
          "title": "paragraph:cta Schema",
          "type": "object",
          "required": ["data"],
          "properties": {
            "jsonapi": {
              "description": "An object describing the server's implementation",
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "additionalProperties": true,
                  "type": "object"
                },
                "version": {"type": "string"}
              }
            },
            "data": {
              "type": "array",
              "items": {"$ref": "#/definitions/paragraph--cta--data"}
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "links": {
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": ["href"],
                "properties": {
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "href": {
                    "format": "uri - reference",
                    "description": "A string containing the link's URL . ",
                    "type": "string"
                  }
                }
              },
              "type": "object"
            }
          }
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter",
          "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "sort",
          "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "page",
          "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "include",
          "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - CTA"]
    }},
    "/paragraph/free_text/{entity}": {"get": {
      "summary": "View (Paragraph - Free text)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the paragraph--free_text resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
      "responses": {"200": {
        "schema": {"$ref": "#/definitions/paragraph--free_text"},
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the paragraph free_text",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Free text"]
    }},
    "/paragraph/hero/{entity}": {"get": {
      "summary": "View (Paragraph - Hero)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the paragraph--hero resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
      "responses": {"200": {
        "schema": {"$ref": "#/definitions/paragraph--hero"},
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the paragraph hero",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Hero"]
    }},
    "/paragraph/multiple_column_item/{entity}/field_image_multiplecolumn": {"get": {
      "summary": "Related: field_image_multiplecolumn (Media - Image)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the media--image resource type through the <em class=\"placeholder\">field_image_multiplecolumn</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
      "responses": {"200": {
        "schema": {"$ref": "#/definitions/media--image"},
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the paragraph multiple_column_item",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Multiple Column Item"]
    }},
    "/file/file/{entity}": {"get": {
      "summary": "View (File)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the file--file resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
      "responses": {"200": {
        "schema": {"$ref": "#/definitions/file--file"},
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the file file",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["File"]
    }},
    "/paragraph/hero/{entity}/relationships/field_references": {"get": {
      "summary": "Relationship: field_references (Media - Document)",
      "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the media--document resource type through the <em class=\"placeholder\">field_references</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
      "responses": {"200": {
        "schema": {
          "type": "object",
          "properties": {"data": {
            "description": "The \"type\" and \"id\" to non-empty members.",
            "additionalProperties": false,
            "type": "object",
            "required": [
              "type",
              "id"
            ],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object",
                "properties": {}
              },
              "id": {
                "format": "uuid",
                "title": "Resource ID",
                "type": "string"
              },
              "type": {
                "title": "Resource type name",
                "type": "string",
                "enum": ["media--document"]
              }
            }
          }}
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the paragraph hero",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Hero"]
    }},
    "/paragraph/related_solutions/{entity}": {"get": {
      "summary": "View (Paragraph - Related Solutions)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the paragraph--related_solutions resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
      "responses": {"200": {
        "schema": {"$ref": "#/definitions/paragraph--related_solutions"},
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the paragraph related_solutions",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Related Solutions"]
    }},
    "/media/remote_video/{entity}/field_image_reference": {"get": {
      "summary": "Related: field_image_reference (Media - Image)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the media--image resource type through the <em class=\"placeholder\">field_image_reference</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
      "responses": {"200": {
        "schema": {"$ref": "#/definitions/media--image"},
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the media remote_video",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Media - Remote video"]
    }},
    "/media/remote_video/{entity}/thumbnail": {"get": {
      "summary": "Related: thumbnail (File)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">thumbnail</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
      "responses": {"200": {
        "schema": {"$ref": "#/definitions/file--file"},
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the media remote_video",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Media - Remote video"]
    }},
    "/paragraph/testimonial/{entity}/relationships/paragraph_type": {"get": {
      "summary": "Relationship: paragraph_type (Paragraphs type)",
      "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the paragraphs_type--paragraphs_type resource type through the <em class=\"placeholder\">paragraph_type</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
      "responses": {"200": {
        "schema": {
          "type": "object",
          "properties": {"data": {
            "description": "The \"type\" and \"id\" to non-empty members.",
            "additionalProperties": false,
            "type": "object",
            "required": [
              "type",
              "id"
            ],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object",
                "properties": {}
              },
              "id": {
                "format": "uuid",
                "title": "Resource ID",
                "type": "string"
              },
              "type": {
                "title": "Resource type name",
                "type": "string",
                "enum": ["paragraphs_type--paragraphs_type"]
              }
            }
          }}
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the paragraph testimonial",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Testimonial"]
    }},
    "/paragraph/multiple_column_item/{entity}": {"get": {
      "summary": "View (Paragraph - Multiple Column Item)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the paragraph--multiple_column_item resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
      "responses": {"200": {
        "schema": {"$ref": "#/definitions/paragraph--multiple_column_item"},
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the paragraph multiple_column_item",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Multiple Column Item"]
    }},
    "/search_api_index/search_api_index/{entity}": {"get": {
      "summary": "View (Search index)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the search_api_index--search_api_index resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
      "responses": {"200": {"description": "successful operation"}},
      "parameters": [
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the search_api_index search_api_index",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Search index"]
    }},
    "/path_alias/path_alias": {"get": {
      "summary": "List (URL alias)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the path_alias--path_alias resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
      "responses": {"200": {
        "schema": {
          "description": "Describes the payload for 'path_alias' entities.",
          "additionalProperties": true,
          "title": "path_alias Schema",
          "type": "object",
          "required": ["data"],
          "properties": {
            "jsonapi": {
              "description": "An object describing the server's implementation",
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "additionalProperties": true,
                  "type": "object"
                },
                "version": {"type": "string"}
              }
            },
            "data": {
              "type": "array",
              "items": {"$ref": "#/definitions/path_alias--path_alias--data"}
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "links": {
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": ["href"],
                "properties": {
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "href": {
                    "format": "uri - reference",
                    "description": "A string containing the link's URL . ",
                    "type": "string"
                  }
                }
              },
              "type": "object"
            }
          }
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter",
          "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "sort",
          "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "page",
          "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "include",
          "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["URL alias"]
    }},
    "/paragraph/related_solutions/{entity}/field_solutions": {"get": {
      "summary": "Related: field_solutions (Content - Basic page)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the node--page resource type through the <em class=\"placeholder\">field_solutions</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
      "responses": {"200": {
        "schema": {
          "description": "Use basic pages for your static content, such as an \\'About us\\' page.",
          "additionalProperties": true,
          "title": "node:page Schema",
          "type": "object",
          "required": ["data"],
          "properties": {
            "jsonapi": {
              "description": "An object describing the server's implementation",
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "additionalProperties": true,
                  "type": "object"
                },
                "version": {"type": "string"}
              }
            },
            "data": {
              "type": "array",
              "items": {"$ref": "#/definitions/node--page--data"}
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "links": {
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": ["href"],
                "properties": {
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "href": {
                    "format": "uri - reference",
                    "description": "A string containing the link's URL . ",
                    "type": "string"
                  }
                }
              },
              "type": "object"
            }
          }
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the paragraph related_solutions",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Related Solutions"]
    }},
    "/paragraph/hero/{entity}/relationships/field_heroimage": {"get": {
      "summary": "Relationship: field_heroimage (Media - Image)",
      "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the media--image resource type through the <em class=\"placeholder\">field_heroimage</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
      "responses": {"200": {
        "schema": {
          "type": "object",
          "properties": {"data": {
            "description": "The \"type\" and \"id\" to non-empty members.",
            "additionalProperties": false,
            "type": "object",
            "required": [
              "type",
              "id"
            ],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object",
                "properties": {}
              },
              "id": {
                "format": "uuid",
                "title": "Resource ID",
                "type": "string"
              },
              "type": {
                "title": "Resource type name",
                "type": "string",
                "enum": ["media--image"]
              }
            }
          }}
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the paragraph hero",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Hero"]
    }},
    "/paragraph/related_solutions": {"get": {
      "summary": "List (Paragraph - Related Solutions)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the paragraph--related_solutions resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
      "responses": {"200": {
        "schema": {
          "description": "Describes the payload for 'paragraph' entities of the 'related_solutions' bundle.",
          "additionalProperties": true,
          "title": "paragraph:related_solutions Schema",
          "type": "object",
          "required": ["data"],
          "properties": {
            "jsonapi": {
              "description": "An object describing the server's implementation",
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "additionalProperties": true,
                  "type": "object"
                },
                "version": {"type": "string"}
              }
            },
            "data": {
              "type": "array",
              "items": {"$ref": "#/definitions/paragraph--related_solutions--data"}
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "links": {
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": ["href"],
                "properties": {
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "href": {
                    "format": "uri - reference",
                    "description": "A string containing the link's URL . ",
                    "type": "string"
                  }
                }
              },
              "type": "object"
            }
          }
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter",
          "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "sort",
          "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "page",
          "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "include",
          "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Related Solutions"]
    }},
    "/menu_link_content/main": {"get": {
      "summary": "List (Custom menu link - Main navigation)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the menu_link_content--main resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
      "responses": {"200": {
        "schema": {
          "description": "Describes the payload for 'menu_link_content' entities of the 'main' bundle.",
          "additionalProperties": true,
          "title": "menu_link_content:main Schema",
          "type": "object",
          "required": ["data"],
          "properties": {
            "jsonapi": {
              "description": "An object describing the server's implementation",
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "additionalProperties": true,
                  "type": "object"
                },
                "version": {"type": "string"}
              }
            },
            "data": {
              "type": "array",
              "items": {"$ref": "#/definitions/menu_link_content--main--data"}
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "links": {
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": ["href"],
                "properties": {
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "href": {
                    "format": "uri - reference",
                    "description": "A string containing the link's URL . ",
                    "type": "string"
                  }
                }
              },
              "type": "object"
            }
          }
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter",
          "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "sort",
          "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "page",
          "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "include",
          "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Custom menu link - Main navigation"]
    }},
    "/paragraph/hero/{entity}/field_heroimage": {"get": {
      "summary": "Related: field_heroimage (Media - Image)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the media--image resource type through the <em class=\"placeholder\">field_heroimage</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
      "responses": {"200": {
        "schema": {"$ref": "#/definitions/media--image"},
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the paragraph hero",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Hero"]
    }},
    "/paragraph/testimonial/{entity}/relationships/field_document_testimonial": {"get": {
      "summary": "Relationship: field_document_testimonial (Media - Document)",
      "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the media--document resource type through the <em class=\"placeholder\">field_document_testimonial</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
      "responses": {"200": {
        "schema": {
          "type": "object",
          "properties": {"data": {
            "uniqueItems": true,
            "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
            "type": "array",
            "items": {
              "description": "The \"type\" and \"id\" to non-empty members.",
              "additionalProperties": false,
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "additionalProperties": true,
                  "type": "object",
                  "properties": {}
                },
                "id": {
                  "format": "uuid",
                  "title": "Resource ID",
                  "type": "string"
                },
                "type": {
                  "title": "Resource type name",
                  "type": "string",
                  "enum": ["media--document"]
                }
              }
            }
          }}
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the paragraph testimonial",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Testimonial"]
    }},
    "/paragraph/testimonial/{entity}/field_media_testimonial": {"get": {
      "summary": "Related: field_media_testimonial (Media - Image)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the media--image resource type through the <em class=\"placeholder\">field_media_testimonial</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
      "responses": {"200": {
        "schema": {"$ref": "#/definitions/media--image"},
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the paragraph testimonial",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Testimonial"]
    }},
    "/paragraph/text_marginal/{entity}/relationships/field_document_textmarginal": {"get": {
      "summary": "Relationship: field_document_textmarginal (Media - Document)",
      "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the media--document resource type through the <em class=\"placeholder\">field_document_textmarginal</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
      "responses": {"200": {
        "schema": {
          "type": "object",
          "properties": {"data": {
            "description": "The \"type\" and \"id\" to non-empty members.",
            "additionalProperties": false,
            "type": "object",
            "required": [
              "type",
              "id"
            ],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object",
                "properties": {}
              },
              "id": {
                "format": "uuid",
                "title": "Resource ID",
                "type": "string"
              },
              "type": {
                "title": "Resource type name",
                "type": "string",
                "enum": ["media--document"]
              }
            }
          }}
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the paragraph text_marginal",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Text Marginal"]
    }},
    "/paragraph/hero_slider/{entity}/field_hero_item": {"get": {
      "summary": "Related: field_hero_item (Paragraph - Hero)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the paragraph--hero resource type through the <em class=\"placeholder\">field_hero_item</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
      "responses": {"200": {
        "schema": {
          "description": "Describes the payload for 'paragraph' entities of the 'hero' bundle.",
          "additionalProperties": true,
          "title": "paragraph:hero Schema",
          "type": "object",
          "required": ["data"],
          "properties": {
            "jsonapi": {
              "description": "An object describing the server's implementation",
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "additionalProperties": true,
                  "type": "object"
                },
                "version": {"type": "string"}
              }
            },
            "data": {
              "type": "array",
              "items": {"$ref": "#/definitions/paragraph--hero--data"}
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "links": {
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": ["href"],
                "properties": {
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "href": {
                    "format": "uri - reference",
                    "description": "A string containing the link's URL . ",
                    "type": "string"
                  }
                }
              },
              "type": "object"
            }
          }
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the paragraph hero_slider",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Hero Slider"]
    }},
    "/paragraph/text_marginal": {"get": {
      "summary": "List (Paragraph - Text Marginal)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the paragraph--text_marginal resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
      "responses": {"200": {
        "schema": {
          "description": "Describes the payload for 'paragraph' entities of the 'text_marginal' bundle.",
          "additionalProperties": true,
          "title": "paragraph:text_marginal Schema",
          "type": "object",
          "required": ["data"],
          "properties": {
            "jsonapi": {
              "description": "An object describing the server's implementation",
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "additionalProperties": true,
                  "type": "object"
                },
                "version": {"type": "string"}
              }
            },
            "data": {
              "type": "array",
              "items": {"$ref": "#/definitions/paragraph--text_marginal--data"}
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "links": {
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": ["href"],
                "properties": {
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "href": {
                    "format": "uri - reference",
                    "description": "A string containing the link's URL . ",
                    "type": "string"
                  }
                }
              },
              "type": "object"
            }
          }
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter",
          "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "sort",
          "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "page",
          "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "include",
          "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Text Marginal"]
    }},
    "/paragraph/testimonial_slider": {"get": {
      "summary": "List (Paragraph - Testimonial Slider)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the paragraph--testimonial_slider resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
      "responses": {"200": {
        "schema": {
          "description": "Describes the payload for 'paragraph' entities of the 'testimonial_slider' bundle.",
          "additionalProperties": true,
          "title": "paragraph:testimonial_slider Schema",
          "type": "object",
          "required": ["data"],
          "properties": {
            "jsonapi": {
              "description": "An object describing the server's implementation",
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "additionalProperties": true,
                  "type": "object"
                },
                "version": {"type": "string"}
              }
            },
            "data": {
              "type": "array",
              "items": {"$ref": "#/definitions/paragraph--testimonial_slider--data"}
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "links": {
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": ["href"],
                "properties": {
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "href": {
                    "format": "uri - reference",
                    "description": "A string containing the link's URL . ",
                    "type": "string"
                  }
                }
              },
              "type": "object"
            }
          }
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter",
          "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "sort",
          "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "page",
          "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "include",
          "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Testimonial Slider"]
    }},
    "/paragraph/section_headline/{entity}/relationships/paragraph_type": {"get": {
      "summary": "Relationship: paragraph_type (Paragraphs type)",
      "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the paragraphs_type--paragraphs_type resource type through the <em class=\"placeholder\">paragraph_type</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
      "responses": {"200": {
        "schema": {
          "type": "object",
          "properties": {"data": {
            "description": "The \"type\" and \"id\" to non-empty members.",
            "additionalProperties": false,
            "type": "object",
            "required": [
              "type",
              "id"
            ],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object",
                "properties": {}
              },
              "id": {
                "format": "uuid",
                "title": "Resource ID",
                "type": "string"
              },
              "type": {
                "title": "Resource type name",
                "type": "string",
                "enum": ["paragraphs_type--paragraphs_type"]
              }
            }
          }}
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the paragraph section_headline",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Section Headline"]
    }},
    "/media/remote_video/{entity}": {"get": {
      "summary": "View (Media - Remote video)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the media--remote_video resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
      "responses": {"200": {
        "schema": {"$ref": "#/definitions/media--remote_video"},
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the media remote_video",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Media - Remote video"]
    }},
    "/paragraph/free_text": {"get": {
      "summary": "List (Paragraph - Free text)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the paragraph--free_text resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
      "responses": {"200": {
        "schema": {
          "description": "Describes the payload for 'paragraph' entities of the 'free_text' bundle.",
          "additionalProperties": true,
          "title": "paragraph:free_text Schema",
          "type": "object",
          "required": ["data"],
          "properties": {
            "jsonapi": {
              "description": "An object describing the server's implementation",
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "additionalProperties": true,
                  "type": "object"
                },
                "version": {"type": "string"}
              }
            },
            "data": {
              "type": "array",
              "items": {"$ref": "#/definitions/paragraph--free_text--data"}
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "links": {
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": ["href"],
                "properties": {
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "href": {
                    "format": "uri - reference",
                    "description": "A string containing the link's URL . ",
                    "type": "string"
                  }
                }
              },
              "type": "object"
            }
          }
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter",
          "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "sort",
          "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "page",
          "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "include",
          "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Free text"]
    }},
    "/paragraph/testimonial/{entity}": {"get": {
      "summary": "View (Paragraph - Testimonial)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the paragraph--testimonial resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
      "responses": {"200": {
        "schema": {"$ref": "#/definitions/paragraph--testimonial"},
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the paragraph testimonial",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Testimonial"]
    }},
    "/paragraph/text_marginal/{entity}/field_document_textmarginal": {"get": {
      "summary": "Related: field_document_textmarginal (Media - Document)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the media--document resource type through the <em class=\"placeholder\">field_document_textmarginal</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
      "responses": {"200": {
        "schema": {"$ref": "#/definitions/media--document"},
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the paragraph text_marginal",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Text Marginal"]
    }},
    "/media/document/{entity}/relationships/field_image_reference": {"get": {
      "summary": "Relationship: field_image_reference (Media - Image)",
      "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the media--image resource type through the <em class=\"placeholder\">field_image_reference</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
      "responses": {"200": {
        "schema": {
          "type": "object",
          "properties": {"data": {
            "description": "The \"type\" and \"id\" to non-empty members.",
            "additionalProperties": false,
            "type": "object",
            "required": [
              "type",
              "id"
            ],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object",
                "properties": {}
              },
              "id": {
                "format": "uuid",
                "title": "Resource ID",
                "type": "string"
              },
              "type": {
                "title": "Resource type name",
                "type": "string",
                "enum": ["media--image"]
              }
            }
          }}
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the media document",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Media - Document"]
    }},
    "/paragraph/related_solutions/{entity}/relationships/field_solutions": {"get": {
      "summary": "Relationship: field_solutions (Content - Basic page)",
      "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the node--page resource type through the <em class=\"placeholder\">field_solutions</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
      "responses": {"200": {
        "schema": {
          "type": "object",
          "properties": {"data": {
            "uniqueItems": true,
            "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
            "type": "array",
            "items": {
              "description": "The \"type\" and \"id\" to non-empty members.",
              "additionalProperties": false,
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "additionalProperties": true,
                  "type": "object",
                  "properties": {}
                },
                "id": {
                  "format": "uuid",
                  "title": "Resource ID",
                  "type": "string"
                },
                "type": {
                  "title": "Resource type name",
                  "type": "string",
                  "enum": ["node--page"]
                }
              }
            }
          }}
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the paragraph related_solutions",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Related Solutions"]
    }},
    "/paragraph/multiple_column/{entity}/relationships/field_multiple_column_item": {"get": {
      "summary": "Relationship: field_multiple_column_item (Paragraph - Multiple Column Item)",
      "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the paragraph--multiple_column_item resource type through the <em class=\"placeholder\">field_multiple_column_item</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
      "responses": {"200": {
        "schema": {
          "type": "object",
          "properties": {"data": {
            "uniqueItems": true,
            "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
            "type": "array",
            "items": {
              "description": "The \"type\" and \"id\" to non-empty members.",
              "additionalProperties": false,
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "additionalProperties": true,
                  "type": "object",
                  "properties": {}
                },
                "id": {
                  "format": "uuid",
                  "title": "Resource ID",
                  "type": "string"
                },
                "type": {
                  "title": "Resource type name",
                  "type": "string",
                  "enum": ["paragraph--multiple_column_item"]
                }
              }
            }
          }}
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the paragraph multiple_column",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Multiple Column"]
    }},
    "/search_page/search_page/{entity}": {"get": {
      "summary": "View (Search page)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the search_page--search_page resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
      "responses": {"200": {"description": "successful operation"}},
      "parameters": [
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the search_page search_page",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Search page"]
    }},
    "/paragraph/divider/{entity}": {"get": {
      "summary": "View (Paragraph - Divider)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the paragraph--divider resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
      "responses": {"200": {
        "schema": {"$ref": "#/definitions/paragraph--divider"},
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the paragraph divider",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Divider"]
    }},
    "/paragraph/section_headline": {"get": {
      "summary": "List (Paragraph - Section Headline)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the paragraph--section_headline resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
      "responses": {"200": {
        "schema": {
          "description": "Describes the payload for 'paragraph' entities of the 'section_headline' bundle.",
          "additionalProperties": true,
          "title": "paragraph:section_headline Schema",
          "type": "object",
          "required": ["data"],
          "properties": {
            "jsonapi": {
              "description": "An object describing the server's implementation",
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "additionalProperties": true,
                  "type": "object"
                },
                "version": {"type": "string"}
              }
            },
            "data": {
              "type": "array",
              "items": {"$ref": "#/definitions/paragraph--section_headline--data"}
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "links": {
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": ["href"],
                "properties": {
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "href": {
                    "format": "uri - reference",
                    "description": "A string containing the link's URL . ",
                    "type": "string"
                  }
                }
              },
              "type": "object"
            }
          }
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter",
          "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "sort",
          "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "page",
          "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "include",
          "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Section Headline"]
    }},
    "/media/image/{entity}/relationships/bundle": {"get": {
      "summary": "Relationship: bundle (Media type)",
      "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the media_type--media_type resource type through the <em class=\"placeholder\">bundle</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
      "responses": {"200": {
        "schema": {
          "type": "object",
          "properties": {"data": {
            "description": "The \"type\" and \"id\" to non-empty members.",
            "additionalProperties": false,
            "type": "object",
            "required": [
              "type",
              "id"
            ],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object",
                "properties": {}
              },
              "id": {
                "format": "uuid",
                "title": "Resource ID",
                "type": "string"
              },
              "type": {
                "title": "Resource type name",
                "type": "string",
                "enum": ["media_type--media_type"]
              }
            }
          }}
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the media image",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Media - Image"]
    }},
    "/paragraph/testimonial/{entity}/relationships/field_media_testimonial": {"get": {
      "summary": "Relationship: field_media_testimonial (Media - Image)",
      "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the media--image resource type through the <em class=\"placeholder\">field_media_testimonial</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
      "responses": {"200": {
        "schema": {
          "type": "object",
          "properties": {"data": {
            "description": "The \"type\" and \"id\" to non-empty members.",
            "additionalProperties": false,
            "type": "object",
            "required": [
              "type",
              "id"
            ],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object",
                "properties": {}
              },
              "id": {
                "format": "uuid",
                "title": "Resource ID",
                "type": "string"
              },
              "type": {
                "title": "Resource type name",
                "type": "string",
                "enum": ["media--image"]
              }
            }
          }}
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the paragraph testimonial",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Testimonial"]
    }},
    "/node/page/{entity}/field_hero_content": {"get": {
      "summary": "Related: field_hero_content (Paragraph - Hero)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the paragraph--hero resource type through the <em class=\"placeholder\">field_hero_content</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
      "responses": {"200": {
        "schema": {"$ref": "#/definitions/paragraph--hero"},
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the node page",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Content - Basic page"]
    }},
    "/node/page/{entity}/relationships/menu_link": {"get": {
      "summary": "Relationship: menu_link (Custom menu link - User account menu)",
      "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the menu_link_content--account resource type through the <em class=\"placeholder\">menu_link</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
      "responses": {"200": {
        "schema": {
          "type": "object",
          "properties": {"data": {
            "description": "The \"type\" and \"id\" to non-empty members.",
            "additionalProperties": false,
            "type": "object",
            "required": [
              "type",
              "id"
            ],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object",
                "properties": {}
              },
              "id": {
                "format": "uuid",
                "title": "Resource ID",
                "type": "string"
              },
              "type": {
                "title": "Resource type name",
                "type": "string",
                "enum": ["menu_link_content--account"]
              }
            }
          }}
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the node page",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Content - Basic page"]
    }},
    "/paragraph/testimonial_slider/{entity}/relationships/field_testimonial_slider": {"get": {
      "summary": "Relationship: field_testimonial_slider (Paragraph - Testimonial)",
      "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the paragraph--testimonial resource type through the <em class=\"placeholder\">field_testimonial_slider</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
      "responses": {"200": {
        "schema": {
          "type": "object",
          "properties": {"data": {
            "uniqueItems": true,
            "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
            "type": "array",
            "items": {
              "description": "The \"type\" and \"id\" to non-empty members.",
              "additionalProperties": false,
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "additionalProperties": true,
                  "type": "object",
                  "properties": {}
                },
                "id": {
                  "format": "uuid",
                  "title": "Resource ID",
                  "type": "string"
                },
                "type": {
                  "title": "Resource type name",
                  "type": "string",
                  "enum": ["paragraph--testimonial"]
                }
              }
            }
          }}
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the paragraph testimonial_slider",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Testimonial Slider"]
    }},
    "/media/remote_video/{entity}/relationships/uid": {"get": {
      "summary": "Relationship: uid (User)",
      "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
      "responses": {"200": {
        "schema": {
          "type": "object",
          "properties": {"data": {
            "description": "The \"type\" and \"id\" to non-empty members.",
            "additionalProperties": false,
            "type": "object",
            "required": [
              "type",
              "id"
            ],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object",
                "properties": {}
              },
              "id": {
                "format": "uuid",
                "title": "Resource ID",
                "type": "string"
              },
              "type": {
                "title": "Resource type name",
                "type": "string",
                "enum": ["user--user"]
              }
            }
          }}
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the media remote_video",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Media - Remote video"]
    }},
    "/paragraph/testimonial/{entity}/field_document_testimonial": {"get": {
      "summary": "Related: field_document_testimonial (Media - Document)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the media--document resource type through the <em class=\"placeholder\">field_document_testimonial</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
      "responses": {"200": {
        "schema": {
          "description": "Describes the payload for 'media' entities of the 'document' bundle.",
          "additionalProperties": true,
          "title": "media:document Schema",
          "type": "object",
          "required": ["data"],
          "properties": {
            "jsonapi": {
              "description": "An object describing the server's implementation",
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "additionalProperties": true,
                  "type": "object"
                },
                "version": {"type": "string"}
              }
            },
            "data": {
              "type": "array",
              "items": {"$ref": "#/definitions/media--document--data"}
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "links": {
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": ["href"],
                "properties": {
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "href": {
                    "format": "uri - reference",
                    "description": "A string containing the link's URL . ",
                    "type": "string"
                  }
                }
              },
              "type": "object"
            }
          }
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the paragraph testimonial",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Testimonial"]
    }},
    "/media/image/{entity}/relationships/field_media_image": {"get": {
      "summary": "Relationship: field_media_image (File)",
      "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">field_media_image</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
      "responses": {"200": {
        "schema": {
          "type": "object",
          "properties": {"data": {
            "description": "The \"type\" and \"id\" to non-empty members.",
            "additionalProperties": false,
            "type": "object",
            "required": [
              "type",
              "id"
            ],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object",
                "properties": {}
              },
              "id": {
                "format": "uuid",
                "title": "Resource ID",
                "type": "string"
              },
              "type": {
                "title": "Resource type name",
                "type": "string",
                "enum": ["file--file"]
              }
            }
          }}
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the media image",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Media - Image"]
    }},
    "/paragraph/multiple_column": {"get": {
      "summary": "List (Paragraph - Multiple Column)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the paragraph--multiple_column resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
      "responses": {"200": {
        "schema": {
          "description": "Describes the payload for 'paragraph' entities of the 'multiple_column' bundle.",
          "additionalProperties": true,
          "title": "paragraph:multiple_column Schema",
          "type": "object",
          "required": ["data"],
          "properties": {
            "jsonapi": {
              "description": "An object describing the server's implementation",
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "additionalProperties": true,
                  "type": "object"
                },
                "version": {"type": "string"}
              }
            },
            "data": {
              "type": "array",
              "items": {"$ref": "#/definitions/paragraph--multiple_column--data"}
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "links": {
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": ["href"],
                "properties": {
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "href": {
                    "format": "uri - reference",
                    "description": "A string containing the link's URL . ",
                    "type": "string"
                  }
                }
              },
              "type": "object"
            }
          }
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter",
          "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "sort",
          "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "page",
          "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "include",
          "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Multiple Column"]
    }},
    "/paragraph/related_items/{entity}": {"get": {
      "summary": "View (Paragraph - Related Items)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the paragraph--related_items resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
      "responses": {"200": {
        "schema": {"$ref": "#/definitions/paragraph--related_items"},
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the paragraph related_items",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Related Items"]
    }},
    "/node/page/{entity}/menu_link": {"get": {
      "summary": "Related: menu_link (Custom menu link - User account menu)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the menu_link_content--account resource type through the <em class=\"placeholder\">menu_link</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
      "responses": {"200": {"description": "successful operation"}},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the node page",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Content - Basic page"]
    }},
    "/paragraph/divider": {"get": {
      "summary": "List (Paragraph - Divider)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the paragraph--divider resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
      "responses": {"200": {
        "schema": {
          "description": "Describes the payload for 'paragraph' entities of the 'divider' bundle.",
          "additionalProperties": true,
          "title": "paragraph:divider Schema",
          "type": "object",
          "required": ["data"],
          "properties": {
            "jsonapi": {
              "description": "An object describing the server's implementation",
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "additionalProperties": true,
                  "type": "object"
                },
                "version": {"type": "string"}
              }
            },
            "data": {
              "type": "array",
              "items": {"$ref": "#/definitions/paragraph--divider--data"}
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "links": {
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": ["href"],
                "properties": {
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "href": {
                    "format": "uri - reference",
                    "description": "A string containing the link's URL . ",
                    "type": "string"
                  }
                }
              },
              "type": "object"
            }
          }
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter",
          "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "sort",
          "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "page",
          "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "include",
          "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Divider"]
    }},
    "/paragraph/multiple_column_item/{entity}/relationships/field_image_multiplecolumn": {"get": {
      "summary": "Relationship: field_image_multiplecolumn (Media - Image)",
      "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the media--image resource type through the <em class=\"placeholder\">field_image_multiplecolumn</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
      "responses": {"200": {
        "schema": {
          "type": "object",
          "properties": {"data": {
            "description": "The \"type\" and \"id\" to non-empty members.",
            "additionalProperties": false,
            "type": "object",
            "required": [
              "type",
              "id"
            ],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object",
                "properties": {}
              },
              "id": {
                "format": "uuid",
                "title": "Resource ID",
                "type": "string"
              },
              "type": {
                "title": "Resource type name",
                "type": "string",
                "enum": ["media--image"]
              }
            }
          }}
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the paragraph multiple_column_item",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Multiple Column Item"]
    }},
    "/node/neuigkeiten": {"get": {
      "summary": "List (Content - Neuigkeiten)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the node--neuigkeiten resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
      "responses": {"200": {
        "schema": {
          "description": "Describes the payload for 'node' entities of the 'neuigkeiten' bundle.",
          "additionalProperties": true,
          "title": "node:neuigkeiten Schema",
          "type": "object",
          "required": ["data"],
          "properties": {
            "jsonapi": {
              "description": "An object describing the server's implementation",
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "additionalProperties": true,
                  "type": "object"
                },
                "version": {"type": "string"}
              }
            },
            "data": {
              "type": "array",
              "items": {"$ref": "#/definitions/node--neuigkeiten--data"}
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "links": {
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": ["href"],
                "properties": {
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "href": {
                    "format": "uri - reference",
                    "description": "A string containing the link's URL . ",
                    "type": "string"
                  }
                }
              },
              "type": "object"
            }
          }
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter",
          "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "sort",
          "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "page",
          "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "include",
          "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Content - Neuigkeiten"]
    }},
    "/paragraph/text_marginal/{entity}/relationships/paragraph_type": {"get": {
      "summary": "Relationship: paragraph_type (Paragraphs type)",
      "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the paragraphs_type--paragraphs_type resource type through the <em class=\"placeholder\">paragraph_type</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
      "responses": {"200": {
        "schema": {
          "type": "object",
          "properties": {"data": {
            "description": "The \"type\" and \"id\" to non-empty members.",
            "additionalProperties": false,
            "type": "object",
            "required": [
              "type",
              "id"
            ],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object",
                "properties": {}
              },
              "id": {
                "format": "uuid",
                "title": "Resource ID",
                "type": "string"
              },
              "type": {
                "title": "Resource type name",
                "type": "string",
                "enum": ["paragraphs_type--paragraphs_type"]
              }
            }
          }}
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the paragraph text_marginal",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Text Marginal"]
    }},
    "/paragraph/multiple_column/{entity}": {"get": {
      "summary": "View (Paragraph - Multiple Column)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the paragraph--multiple_column resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
      "responses": {"200": {
        "schema": {"$ref": "#/definitions/paragraph--multiple_column"},
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the paragraph multiple_column",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Multiple Column"]
    }},
    "/paragraph/related_items/{entity}/relationships/paragraph_type": {"get": {
      "summary": "Relationship: paragraph_type (Paragraphs type)",
      "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the paragraphs_type--paragraphs_type resource type through the <em class=\"placeholder\">paragraph_type</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
      "responses": {"200": {
        "schema": {
          "type": "object",
          "properties": {"data": {
            "description": "The \"type\" and \"id\" to non-empty members.",
            "additionalProperties": false,
            "type": "object",
            "required": [
              "type",
              "id"
            ],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object",
                "properties": {}
              },
              "id": {
                "format": "uuid",
                "title": "Resource ID",
                "type": "string"
              },
              "type": {
                "title": "Resource type name",
                "type": "string",
                "enum": ["paragraphs_type--paragraphs_type"]
              }
            }
          }}
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the paragraph related_items",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Related Items"]
    }},
    "/media/document": {"get": {
      "summary": "List (Media - Document)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the media--document resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
      "responses": {"200": {
        "schema": {
          "description": "Describes the payload for 'media' entities of the 'document' bundle.",
          "additionalProperties": true,
          "title": "media:document Schema",
          "type": "object",
          "required": ["data"],
          "properties": {
            "jsonapi": {
              "description": "An object describing the server's implementation",
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "additionalProperties": true,
                  "type": "object"
                },
                "version": {"type": "string"}
              }
            },
            "data": {
              "type": "array",
              "items": {"$ref": "#/definitions/media--document--data"}
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "links": {
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": ["href"],
                "properties": {
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "href": {
                    "format": "uri - reference",
                    "description": "A string containing the link's URL . ",
                    "type": "string"
                  }
                }
              },
              "type": "object"
            }
          }
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter",
          "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "sort",
          "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "page",
          "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "include",
          "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Media - Document"]
    }},
    "/search_api_index/search_api_index": {"get": {
      "summary": "List (Search index)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the search_api_index--search_api_index resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
      "responses": {"200": {"description": "successful operation"}},
      "parameters": [
        {
          "in": "query",
          "name": "filter",
          "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "sort",
          "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "page",
          "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "include",
          "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Search index"]
    }},
    "/media/remote_video": {"get": {
      "summary": "List (Media - Remote video)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the media--remote_video resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
      "responses": {"200": {
        "schema": {
          "description": "Describes the payload for 'media' entities of the 'remote_video' bundle.",
          "additionalProperties": true,
          "title": "media:remote_video Schema",
          "type": "object",
          "required": ["data"],
          "properties": {
            "jsonapi": {
              "description": "An object describing the server's implementation",
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "additionalProperties": true,
                  "type": "object"
                },
                "version": {"type": "string"}
              }
            },
            "data": {
              "type": "array",
              "items": {"$ref": "#/definitions/media--remote_video--data"}
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "links": {
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": ["href"],
                "properties": {
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "href": {
                    "format": "uri - reference",
                    "description": "A string containing the link's URL . ",
                    "type": "string"
                  }
                }
              },
              "type": "object"
            }
          }
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter",
          "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "sort",
          "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "page",
          "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "include",
          "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Media - Remote video"]
    }},
    "/menu_link_content/main/{entity}/relationships/field_cta_mainnav": {"get": {
      "summary": "Relationship: field_cta_mainnav (Paragraph - CTA)",
      "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the paragraph--cta resource type through the <em class=\"placeholder\">field_cta_mainnav</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
      "responses": {"200": {
        "schema": {
          "type": "object",
          "properties": {"data": {
            "description": "The \"type\" and \"id\" to non-empty members.",
            "additionalProperties": false,
            "type": "object",
            "required": [
              "type",
              "id"
            ],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object",
                "properties": {}
              },
              "id": {
                "format": "uuid",
                "title": "Resource ID",
                "type": "string"
              },
              "type": {
                "title": "Resource type name",
                "type": "string",
                "enum": ["paragraph--cta"]
              }
            }
          }}
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the menu_link_content main",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Custom menu link - Main navigation"]
    }},
    "/media/image": {"get": {
      "summary": "List (Media - Image)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the media--image resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
      "responses": {"200": {
        "schema": {
          "description": "Describes the payload for 'media' entities of the 'image' bundle.",
          "additionalProperties": true,
          "title": "media:image Schema",
          "type": "object",
          "required": ["data"],
          "properties": {
            "jsonapi": {
              "description": "An object describing the server's implementation",
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "additionalProperties": true,
                  "type": "object"
                },
                "version": {"type": "string"}
              }
            },
            "data": {
              "type": "array",
              "items": {"$ref": "#/definitions/media--image--data"}
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "links": {
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": ["href"],
                "properties": {
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "href": {
                    "format": "uri - reference",
                    "description": "A string containing the link's URL . ",
                    "type": "string"
                  }
                }
              },
              "type": "object"
            }
          }
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter",
          "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "sort",
          "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "page",
          "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "include",
          "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Media - Image"]
    }},
    "/media/remote_video/{entity}/relationships/field_image_reference": {"get": {
      "summary": "Relationship: field_image_reference (Media - Image)",
      "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the media--image resource type through the <em class=\"placeholder\">field_image_reference</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
      "responses": {"200": {
        "schema": {
          "type": "object",
          "properties": {"data": {
            "description": "The \"type\" and \"id\" to non-empty members.",
            "additionalProperties": false,
            "type": "object",
            "required": [
              "type",
              "id"
            ],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object",
                "properties": {}
              },
              "id": {
                "format": "uuid",
                "title": "Resource ID",
                "type": "string"
              },
              "type": {
                "title": "Resource type name",
                "type": "string",
                "enum": ["media--image"]
              }
            }
          }}
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the media remote_video",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Media - Remote video"]
    }},
    "/node/page/{entity}": {"get": {
      "summary": "View (Content - Basic page)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the node--page resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
      "responses": {"200": {
        "schema": {"$ref": "#/definitions/node--page"},
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the node page",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Content - Basic page"]
    }},
    "/media/document/{entity}/field_image_reference": {"get": {
      "summary": "Related: field_image_reference (Media - Image)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the media--image resource type through the <em class=\"placeholder\">field_image_reference</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
      "responses": {"200": {
        "schema": {"$ref": "#/definitions/media--image"},
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the media document",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Media - Document"]
    }},
    "/paragraph/text_media_box": {"get": {
      "summary": "List (Paragraph - Text Media Box)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the paragraph--text_media_box resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
      "responses": {"200": {
        "schema": {
          "description": "Describes the payload for 'paragraph' entities of the 'text_media_box' bundle.",
          "additionalProperties": true,
          "title": "paragraph:text_media_box Schema",
          "type": "object",
          "required": ["data"],
          "properties": {
            "jsonapi": {
              "description": "An object describing the server's implementation",
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "additionalProperties": true,
                  "type": "object"
                },
                "version": {"type": "string"}
              }
            },
            "data": {
              "type": "array",
              "items": {"$ref": "#/definitions/paragraph--text_media_box--data"}
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "links": {
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": ["href"],
                "properties": {
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "href": {
                    "format": "uri - reference",
                    "description": "A string containing the link's URL . ",
                    "type": "string"
                  }
                }
              },
              "type": "object"
            }
          }
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter",
          "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "sort",
          "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "page",
          "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "include",
          "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Text Media Box"]
    }},
    "/media/document/{entity}": {"get": {
      "summary": "View (Media - Document)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the media--document resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
      "responses": {"200": {
        "schema": {"$ref": "#/definitions/media--document"},
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the media document",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Media - Document"]
    }},
    "/node/page/{entity}/relationships/node_type": {"get": {
      "summary": "Relationship: node_type (Content type)",
      "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the node_type--node_type resource type through the <em class=\"placeholder\">node_type</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
      "responses": {"200": {
        "schema": {
          "type": "object",
          "properties": {"data": {
            "description": "The \"type\" and \"id\" to non-empty members.",
            "additionalProperties": false,
            "type": "object",
            "required": [
              "type",
              "id"
            ],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object",
                "properties": {}
              },
              "id": {
                "format": "uuid",
                "title": "Resource ID",
                "type": "string"
              },
              "type": {
                "title": "Resource type name",
                "type": "string",
                "enum": ["node_type--node_type"]
              }
            }
          }}
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the node page",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Content - Basic page"]
    }},
    "/paragraph/cta/{entity}/relationships/field_media_cta": {"get": {
      "summary": "Relationship: field_media_cta (Media - Image)",
      "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the media--image resource type through the <em class=\"placeholder\">field_media_cta</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
      "responses": {"200": {
        "schema": {
          "type": "object",
          "properties": {"data": {
            "description": "The \"type\" and \"id\" to non-empty members.",
            "additionalProperties": false,
            "type": "object",
            "required": [
              "type",
              "id"
            ],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object",
                "properties": {}
              },
              "id": {
                "format": "uuid",
                "title": "Resource ID",
                "type": "string"
              },
              "type": {
                "title": "Resource type name",
                "type": "string",
                "enum": ["media--image"]
              }
            }
          }}
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the paragraph cta",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - CTA"]
    }},
    "/node/page/{entity}/field_teaser_image_page": {"get": {
      "summary": "Related: field_teaser_image_page (Media - Image)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the media--image resource type through the <em class=\"placeholder\">field_teaser_image_page</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
      "responses": {"200": {
        "schema": {"$ref": "#/definitions/media--image"},
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the node page",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Content - Basic page"]
    }},
    "/media/image/{entity}/relationships/uid": {"get": {
      "summary": "Relationship: uid (User)",
      "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the user--user resource type through the <em class=\"placeholder\">uid</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
      "responses": {"200": {
        "schema": {
          "type": "object",
          "properties": {"data": {
            "description": "The \"type\" and \"id\" to non-empty members.",
            "additionalProperties": false,
            "type": "object",
            "required": [
              "type",
              "id"
            ],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object",
                "properties": {}
              },
              "id": {
                "format": "uuid",
                "title": "Resource ID",
                "type": "string"
              },
              "type": {
                "title": "Resource type name",
                "type": "string",
                "enum": ["user--user"]
              }
            }
          }}
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the media image",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Media - Image"]
    }},
    "/node/page/{entity}/relationships/field_component": {"get": {
      "summary": "Relationship: field_component (Paragraph - Text Media Box)",
      "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the paragraph--text_media_box resource type through the <em class=\"placeholder\">field_component</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
      "responses": {"200": {
        "schema": {
          "type": "object",
          "properties": {"data": {
            "uniqueItems": true,
            "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
            "type": "array",
            "items": {
              "description": "The \"type\" and \"id\" to non-empty members.",
              "additionalProperties": false,
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "additionalProperties": true,
                  "type": "object",
                  "properties": {}
                },
                "id": {
                  "format": "uuid",
                  "title": "Resource ID",
                  "type": "string"
                },
                "type": {
                  "title": "Resource type name",
                  "type": "string",
                  "enum": ["paragraph--text_media_box"]
                }
              }
            }
          }}
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the node page",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Content - Basic page"]
    }},
    "/paragraph/testimonial_slider/{entity}/field_testimonial_slider": {"get": {
      "summary": "Related: field_testimonial_slider (Paragraph - Testimonial)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the paragraph--testimonial resource type through the <em class=\"placeholder\">field_testimonial_slider</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
      "responses": {"200": {
        "schema": {
          "description": "Describes the payload for 'paragraph' entities of the 'testimonial' bundle.",
          "additionalProperties": true,
          "title": "paragraph:testimonial Schema",
          "type": "object",
          "required": ["data"],
          "properties": {
            "jsonapi": {
              "description": "An object describing the server's implementation",
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "additionalProperties": true,
                  "type": "object"
                },
                "version": {"type": "string"}
              }
            },
            "data": {
              "type": "array",
              "items": {"$ref": "#/definitions/paragraph--testimonial--data"}
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "links": {
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": ["href"],
                "properties": {
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "href": {
                    "format": "uri - reference",
                    "description": "A string containing the link's URL . ",
                    "type": "string"
                  }
                }
              },
              "type": "object"
            }
          }
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the paragraph testimonial_slider",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Testimonial Slider"]
    }},
    "/menu_link_content/footer/{entity}": {"get": {
      "summary": "View (Custom menu link - Footer)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the menu_link_content--footer resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
      "responses": {"200": {
        "schema": {"$ref": "#/definitions/menu_link_content--footer"},
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the menu_link_content footer",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Custom menu link - Footer"]
    }},
    "/paragraph/multiple_column/{entity}/field_multiple_column_item": {"get": {
      "summary": "Related: field_multiple_column_item (Paragraph - Multiple Column Item)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the paragraph--multiple_column_item resource type through the <em class=\"placeholder\">field_multiple_column_item</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
      "responses": {"200": {
        "schema": {
          "description": "Describes the payload for 'paragraph' entities of the 'multiple_column_item' bundle.",
          "additionalProperties": true,
          "title": "paragraph:multiple_column_item Schema",
          "type": "object",
          "required": ["data"],
          "properties": {
            "jsonapi": {
              "description": "An object describing the server's implementation",
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "additionalProperties": true,
                  "type": "object"
                },
                "version": {"type": "string"}
              }
            },
            "data": {
              "type": "array",
              "items": {"$ref": "#/definitions/paragraph--multiple_column_item--data"}
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "links": {
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": ["href"],
                "properties": {
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "href": {
                    "format": "uri - reference",
                    "description": "A string containing the link's URL . ",
                    "type": "string"
                  }
                }
              },
              "type": "object"
            }
          }
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the paragraph multiple_column",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Multiple Column"]
    }},
    "/node/page": {"get": {
      "summary": "List (Content - Basic page)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the node--page resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
      "responses": {"200": {
        "schema": {
          "description": "Use basic pages for your static content, such as an \\'About us\\' page.",
          "additionalProperties": true,
          "title": "node:page Schema",
          "type": "object",
          "required": ["data"],
          "properties": {
            "jsonapi": {
              "description": "An object describing the server's implementation",
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "additionalProperties": true,
                  "type": "object"
                },
                "version": {"type": "string"}
              }
            },
            "data": {
              "type": "array",
              "items": {"$ref": "#/definitions/node--page--data"}
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "links": {
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": ["href"],
                "properties": {
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "href": {
                    "format": "uri - reference",
                    "description": "A string containing the link's URL . ",
                    "type": "string"
                  }
                }
              },
              "type": "object"
            }
          }
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter",
          "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "sort",
          "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "page",
          "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "include",
          "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Content - Basic page"]
    }},
    "/menu_link_content/main/{entity}": {"get": {
      "summary": "View (Custom menu link - Main navigation)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the menu_link_content--main resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
      "responses": {"200": {
        "schema": {"$ref": "#/definitions/menu_link_content--main"},
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the menu_link_content main",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Custom menu link - Main navigation"]
    }},
    "/paragraph/text_marginal/{entity}": {"get": {
      "summary": "View (Paragraph - Text Marginal)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the paragraph--text_marginal resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
      "responses": {"200": {
        "schema": {"$ref": "#/definitions/paragraph--text_marginal"},
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the paragraph text_marginal",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Text Marginal"]
    }},
    "/file/file": {"get": {
      "summary": "List (File)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the file--file resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
      "responses": {"200": {
        "schema": {
          "description": "Describes the payload for 'file' entities.",
          "additionalProperties": true,
          "title": "file Schema",
          "type": "object",
          "required": ["data"],
          "properties": {
            "jsonapi": {
              "description": "An object describing the server's implementation",
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "additionalProperties": true,
                  "type": "object"
                },
                "version": {"type": "string"}
              }
            },
            "data": {
              "type": "array",
              "items": {"$ref": "#/definitions/file--file--data"}
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "links": {
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": ["href"],
                "properties": {
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "href": {
                    "format": "uri - reference",
                    "description": "A string containing the link's URL . ",
                    "type": "string"
                  }
                }
              },
              "type": "object"
            }
          }
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "filter",
          "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "sort",
          "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "page",
          "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "include",
          "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["File"]
    }},
    "/menu_link_content/main/{entity}/field_cta_mainnav": {"get": {
      "summary": "Related: field_cta_mainnav (Paragraph - CTA)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the paragraph--cta resource type through the <em class=\"placeholder\">field_cta_mainnav</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
      "responses": {"200": {
        "schema": {"$ref": "#/definitions/paragraph--cta"},
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the menu_link_content main",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Custom menu link - Main navigation"]
    }},
    "/media/document/{entity}/relationships/field_media_document": {"get": {
      "summary": "Relationship: field_media_document (File)",
      "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">field_media_document</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
      "responses": {"200": {
        "schema": {
          "type": "object",
          "properties": {"data": {
            "description": "The \"type\" and \"id\" to non-empty members.",
            "additionalProperties": false,
            "type": "object",
            "required": [
              "type",
              "id"
            ],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object",
                "properties": {}
              },
              "id": {
                "format": "uuid",
                "title": "Resource ID",
                "type": "string"
              },
              "type": {
                "title": "Resource type name",
                "type": "string",
                "enum": ["file--file"]
              }
            }
          }}
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the media document",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Media - Document"]
    }},
    "/paragraph/hero_slider": {"get": {
      "summary": "List (Paragraph - Hero Slider)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the paragraph--hero_slider resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
      "responses": {"200": {
        "schema": {
          "description": "Describes the payload for 'paragraph' entities of the 'hero_slider' bundle.",
          "additionalProperties": true,
          "title": "paragraph:hero_slider Schema",
          "type": "object",
          "required": ["data"],
          "properties": {
            "jsonapi": {
              "description": "An object describing the server's implementation",
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "additionalProperties": true,
                  "type": "object"
                },
                "version": {"type": "string"}
              }
            },
            "data": {
              "type": "array",
              "items": {"$ref": "#/definitions/paragraph--hero_slider--data"}
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "links": {
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": ["href"],
                "properties": {
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "href": {
                    "format": "uri - reference",
                    "description": "A string containing the link's URL . ",
                    "type": "string"
                  }
                }
              },
              "type": "object"
            }
          }
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter",
          "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "sort",
          "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "page",
          "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "include",
          "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Hero Slider"]
    }},
    "/media/remote_video/{entity}/relationships/thumbnail": {"get": {
      "summary": "Relationship: thumbnail (File)",
      "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">thumbnail</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
      "responses": {"200": {
        "schema": {
          "type": "object",
          "properties": {"data": {
            "description": "The \"type\" and \"id\" to non-empty members.",
            "additionalProperties": false,
            "type": "object",
            "required": [
              "type",
              "id"
            ],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object",
                "properties": {}
              },
              "id": {
                "format": "uuid",
                "title": "Resource ID",
                "type": "string"
              },
              "type": {
                "title": "Resource type name",
                "type": "string",
                "enum": ["file--file"]
              }
            }
          }}
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the media remote_video",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Media - Remote video"]
    }},
    "/paragraph/testimonial_slider/{entity}/relationships/paragraph_type": {"get": {
      "summary": "Relationship: paragraph_type (Paragraphs type)",
      "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the paragraphs_type--paragraphs_type resource type through the <em class=\"placeholder\">paragraph_type</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
      "responses": {"200": {
        "schema": {
          "type": "object",
          "properties": {"data": {
            "description": "The \"type\" and \"id\" to non-empty members.",
            "additionalProperties": false,
            "type": "object",
            "required": [
              "type",
              "id"
            ],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object",
                "properties": {}
              },
              "id": {
                "format": "uuid",
                "title": "Resource ID",
                "type": "string"
              },
              "type": {
                "title": "Resource type name",
                "type": "string",
                "enum": ["paragraphs_type--paragraphs_type"]
              }
            }
          }}
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the paragraph testimonial_slider",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Testimonial Slider"]
    }},
    "/media/document/{entity}/relationships/thumbnail": {"get": {
      "summary": "Relationship: thumbnail (File)",
      "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">thumbnail</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
      "responses": {"200": {
        "schema": {
          "type": "object",
          "properties": {"data": {
            "description": "The \"type\" and \"id\" to non-empty members.",
            "additionalProperties": false,
            "type": "object",
            "required": [
              "type",
              "id"
            ],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object",
                "properties": {}
              },
              "id": {
                "format": "uuid",
                "title": "Resource ID",
                "type": "string"
              },
              "type": {
                "title": "Resource type name",
                "type": "string",
                "enum": ["file--file"]
              }
            }
          }}
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the media document",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Media - Document"]
    }},
    "/paragraph/hero/{entity}/field_references": {"get": {
      "summary": "Related: field_references (Media - Document)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the media--document resource type through the <em class=\"placeholder\">field_references</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
      "responses": {"200": {
        "schema": {"$ref": "#/definitions/media--document"},
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the paragraph hero",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Hero"]
    }},
    "/paragraph/testimonial": {"get": {
      "summary": "List (Paragraph - Testimonial)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the paragraph--testimonial resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
      "responses": {"200": {
        "schema": {
          "description": "Describes the payload for 'paragraph' entities of the 'testimonial' bundle.",
          "additionalProperties": true,
          "title": "paragraph:testimonial Schema",
          "type": "object",
          "required": ["data"],
          "properties": {
            "jsonapi": {
              "description": "An object describing the server's implementation",
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "additionalProperties": true,
                  "type": "object"
                },
                "version": {"type": "string"}
              }
            },
            "data": {
              "type": "array",
              "items": {"$ref": "#/definitions/paragraph--testimonial--data"}
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "links": {
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": ["href"],
                "properties": {
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "href": {
                    "format": "uri - reference",
                    "description": "A string containing the link's URL . ",
                    "type": "string"
                  }
                }
              },
              "type": "object"
            }
          }
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter",
          "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "sort",
          "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "page",
          "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "include",
          "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Testimonial"]
    }},
    "/paragraph/cta/{entity}": {"get": {
      "summary": "View (Paragraph - CTA)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the paragraph--cta resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
      "responses": {"200": {
        "schema": {"$ref": "#/definitions/paragraph--cta"},
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the paragraph cta",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - CTA"]
    }},
    "/paragraph/text_media_box/{entity}/field_media_mediabox": {"get": {
      "summary": "Related: field_media_mediabox (Media - Image)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the media--image resource type through the <em class=\"placeholder\">field_media_mediabox</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
      "responses": {"200": {
        "schema": {"$ref": "#/definitions/media--image"},
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the paragraph text_media_box",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Text Media Box"]
    }},
    "/media/image/{entity}": {"get": {
      "summary": "View (Media - Image)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the media--image resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
      "responses": {"200": {
        "schema": {"$ref": "#/definitions/media--image"},
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the media image",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Media - Image"]
    }},
    "/paragraph/hero": {"get": {
      "summary": "List (Paragraph - Hero)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the paragraph--hero resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
      "responses": {"200": {
        "schema": {
          "description": "Describes the payload for 'paragraph' entities of the 'hero' bundle.",
          "additionalProperties": true,
          "title": "paragraph:hero Schema",
          "type": "object",
          "required": ["data"],
          "properties": {
            "jsonapi": {
              "description": "An object describing the server's implementation",
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "additionalProperties": true,
                  "type": "object"
                },
                "version": {"type": "string"}
              }
            },
            "data": {
              "type": "array",
              "items": {"$ref": "#/definitions/paragraph--hero--data"}
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "links": {
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": ["href"],
                "properties": {
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "href": {
                    "format": "uri - reference",
                    "description": "A string containing the link's URL . ",
                    "type": "string"
                  }
                }
              },
              "type": "object"
            }
          }
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter",
          "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "sort",
          "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "page",
          "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "include",
          "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Hero"]
    }},
    "/media/remote_video/{entity}/relationships/field_category": {"get": {
      "summary": "Relationship: field_category (Taxonomy term - Tags)",
      "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the taxonomy_term--tags resource type through the <em class=\"placeholder\">field_category</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
      "responses": {"200": {
        "schema": {
          "type": "object",
          "properties": {"data": {
            "description": "The \"type\" and \"id\" to non-empty members.",
            "additionalProperties": false,
            "type": "object",
            "required": [
              "type",
              "id"
            ],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object",
                "properties": {}
              },
              "id": {
                "format": "uuid",
                "title": "Resource ID",
                "type": "string"
              },
              "type": {
                "title": "Resource type name",
                "type": "string",
                "enum": ["taxonomy_term--tags"]
              }
            }
          }}
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the media remote_video",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Media - Remote video"]
    }},
    "/paragraph/section_headline/{entity}": {"get": {
      "summary": "View (Paragraph - Section Headline)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the paragraph--section_headline resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
      "responses": {"200": {
        "schema": {"$ref": "#/definitions/paragraph--section_headline"},
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the paragraph section_headline",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Section Headline"]
    }},
    "/node/page/{entity}/field_component": {"get": {
      "summary": "Related: field_component (Paragraph - Text Media Box)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the paragraph--text_media_box resource type through the <em class=\"placeholder\">field_component</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
      "responses": {"200": {
        "schema": {
          "description": "Describes the payload for 'paragraph' entities of the 'text_media_box' bundle.",
          "additionalProperties": true,
          "title": "paragraph:text_media_box Schema",
          "type": "object",
          "required": ["data"],
          "properties": {
            "jsonapi": {
              "description": "An object describing the server's implementation",
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "additionalProperties": true,
                  "type": "object"
                },
                "version": {"type": "string"}
              }
            },
            "data": {
              "type": "array",
              "items": {"$ref": "#/definitions/paragraph--text_media_box--data"}
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "links": {
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": ["href"],
                "properties": {
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "href": {
                    "format": "uri - reference",
                    "description": "A string containing the link's URL . ",
                    "type": "string"
                  }
                }
              },
              "type": "object"
            }
          }
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the node page",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Content - Basic page"]
    }},
    "/node/page/{entity}/relationships/field_hero_content": {"get": {
      "summary": "Relationship: field_hero_content (Paragraph - Hero)",
      "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the paragraph--hero resource type through the <em class=\"placeholder\">field_hero_content</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
      "responses": {"200": {
        "schema": {
          "type": "object",
          "properties": {"data": {
            "description": "The \"type\" and \"id\" to non-empty members.",
            "additionalProperties": false,
            "type": "object",
            "required": [
              "type",
              "id"
            ],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object",
                "properties": {}
              },
              "id": {
                "format": "uuid",
                "title": "Resource ID",
                "type": "string"
              },
              "type": {
                "title": "Resource type name",
                "type": "string",
                "enum": ["paragraph--hero"]
              }
            }
          }}
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the node page",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Content - Basic page"]
    }},
    "/media/document/{entity}/thumbnail": {"get": {
      "summary": "Related: thumbnail (File)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Related endpoint</a></em> for the file--file resource type through the <em class=\"placeholder\">thumbnail</em> relationship. The related endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular related resource or entity.",
      "responses": {"200": {
        "schema": {"$ref": "#/definitions/file--file"},
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the media document",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Media - Document"]
    }},
    "/node/neuigkeiten/{entity}": {"get": {
      "summary": "View (Content - Neuigkeiten)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the node--neuigkeiten resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
      "responses": {"200": {
        "schema": {"$ref": "#/definitions/node--neuigkeiten"},
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the node neuigkeiten",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Content - Neuigkeiten"]
    }},
    "/paragraph/hero_slider/{entity}": {"get": {
      "summary": "View (Paragraph - Hero Slider)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the paragraph--hero_slider resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
      "responses": {"200": {
        "schema": {"$ref": "#/definitions/paragraph--hero_slider"},
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the paragraph hero_slider",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Hero Slider"]
    }},
    "/node/page/{entity}/relationships/field_teaser_image_page": {"get": {
      "summary": "Relationship: field_teaser_image_page (Media - Image)",
      "description": "<em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#fetching-relationships\">Relationship endpoint</a></em> for the media--image resource type through the <em class=\"placeholder\">field_teaser_image_page</em> relationship. The relationship endpoint contains a <em class=\"placeholder\"><a href=\"https://jsonapi.org/format/#document-resource-identifier-objects\">resource identifier object</a></em> with the data for a particular relationship.",
      "responses": {"200": {
        "schema": {
          "type": "object",
          "properties": {"data": {
            "description": "The \"type\" and \"id\" to non-empty members.",
            "additionalProperties": false,
            "type": "object",
            "required": [
              "type",
              "id"
            ],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object",
                "properties": {}
              },
              "id": {
                "format": "uuid",
                "title": "Resource ID",
                "type": "string"
              },
              "type": {
                "title": "Resource type name",
                "type": "string",
                "enum": ["media--image"]
              }
            }
          }}
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the node page",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Content - Basic page"]
    }},
    "/paragraph/related_items": {"get": {
      "summary": "List (Paragraph - Related Items)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Collection endpoint</a></em> for the paragraph--related_items resource type. Collections are a list of <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource objects</a></em> for a particular resource type. In the JSON API module for Drupal all collections are homogeneous, which means that all the items in a collection are of the same type.",
      "responses": {"200": {
        "schema": {
          "description": "Describes the payload for 'paragraph' entities of the 'related_items' bundle.",
          "additionalProperties": true,
          "title": "paragraph:related_items Schema",
          "type": "object",
          "required": ["data"],
          "properties": {
            "jsonapi": {
              "description": "An object describing the server's implementation",
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "meta": {
                  "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                  "additionalProperties": true,
                  "type": "object"
                },
                "version": {"type": "string"}
              }
            },
            "data": {
              "type": "array",
              "items": {"$ref": "#/definitions/paragraph--related_items--data"}
            },
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "links": {
              "additionalProperties": {
                "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
                "type": "object",
                "required": ["href"],
                "properties": {
                  "meta": {
                    "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                    "additionalProperties": true,
                    "type": "object"
                  },
                  "href": {
                    "format": "uri - reference",
                    "description": "A string containing the link's URL . ",
                    "type": "string"
                  }
                }
              },
              "type": "object"
            }
          }
        },
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter",
          "description": "The JSON:API module has some of the most robust and feature-rich filtering features around. All of that power comes with a bit of a learning curve though. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/filtering\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "sort",
          "description": "The JSON:API module allows you to sort collections based on properties in the resource or in nested resources. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/sorting\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "page",
          "description": "Pagination can be a deceptively complex topic. It's easy to fall into traps and not follow best-practices. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/pagination\">Learn more in the documentation</a>.",
          "type": "array",
          "items": {"type": "string"},
          "required": false
        },
        {
          "in": "query",
          "name": "include",
          "description": "Embed related entities in the response. For example: use a query string like <code>?include=comments.author</code> to include all the entities referenced by <code>comments</code> and all the entities referenced by <code>author</code> on those entities!. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/includes\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Related Items"]
    }},
    "/paragraph/text_media_box/{entity}": {"get": {
      "summary": "View (Paragraph - Text Media Box)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the paragraph--text_media_box resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
      "responses": {"200": {
        "schema": {"$ref": "#/definitions/paragraph--text_media_box"},
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the paragraph text_media_box",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Text Media Box"]
    }},
    "/paragraph/testimonial_slider/{entity}": {"get": {
      "summary": "View (Paragraph - Testimonial Slider)",
      "description": "<em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#fetching\">Individual endpoint</a></em> for the paragraph--testimonial_slider resource type. The individual endpoint contains a <em class=\"placeholder\"><a href=\"http://jsonapi.org/format/#document-resource-objects\">resource object</a></em> with the data for a particular resource or entity.",
      "responses": {"200": {
        "schema": {"$ref": "#/definitions/paragraph--testimonial_slider"},
        "description": "successful operation"
      }},
      "parameters": [
        {
          "in": "query",
          "name": "resourceVersion",
          "description": "The JSON:API module exposes entity revisions as resource versions. <a href=\"https://www.drupal.org/docs/8/modules/jsonapi/revisions\">Learn more in the documentation</a>.",
          "type": "string",
          "required": false
        },
        {
          "in": "path",
          "name": "entity",
          "format": "uuid",
          "description": "The uuid of the paragraph testimonial_slider",
          "type": "string",
          "required": true
        },
        {
          "in": "query",
          "name": "include",
          "description": "include relation data",
          "type": "string",
          "required": false
        },
        {
          "in": "query",
          "name": "filter[field_path][value]",
          "description": "filter by path",
          "type": "string",
          "required": false
        }
      ],
      "tags": ["Paragraph - Testimonial Slider"]
    }}
  },
  "host": "silburydemo.staging.sites.dropsolid-sites.com",
  "produces": ["application/vnd.api+json"],
  "schemes": ["http"],
  "securityDefinitions": {"csrf_token": {
    "x-tokenUrl": "http://silburydemo.staging.sites.dropsolid-sites.com/user/token",
    "in": "header",
    "name": "X-CSRF-Token",
    "type": "apiKey"
  }},
  "definitions": {
    "media--document--data": {
      "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
      "additionalProperties": false,
      "type": "object",
      "required": [
        "type",
        "id"
      ],
      "properties": {
        "relationships": {
          "description": "Entity relationships",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "thumbnail": {
              "type": "object",
              "title": "Thumbnail",
              "properties": {"data": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "id": {
                    "format": "uuid",
                    "type": "string",
                    "title": "Resource ID",
                    "maxLength": 128
                  },
                  "type": {
                    "type": "string",
                    "title": "Referenced resource",
                    "enum": ["file--file"]
                  }
                }
              }}
            },
            "field_category": {
              "type": "object",
              "title": "Category",
              "properties": {"data": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "id": {
                    "format": "uuid",
                    "type": "string",
                    "title": "Resource ID",
                    "maxLength": 128
                  },
                  "type": {
                    "type": "string",
                    "title": "Referenced resource",
                    "enum": ["taxonomy_term--tags"]
                  }
                }
              }}
            },
            "field_image_reference": {
              "type": "object",
              "title": "Image",
              "properties": {"data": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "id": {
                    "format": "uuid",
                    "type": "string",
                    "title": "Resource ID",
                    "maxLength": 128
                  },
                  "type": {
                    "type": "string",
                    "title": "Referenced resource",
                    "enum": ["media--image"]
                  }
                }
              }}
            },
            "field_media_document": {
              "type": "object",
              "title": "Document",
              "properties": {"data": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "id": {
                    "format": "uuid",
                    "type": "string",
                    "title": "Resource ID",
                    "maxLength": 128
                  },
                  "type": {
                    "type": "string",
                    "title": "Referenced resource",
                    "enum": ["file--file"]
                  }
                }
              }}
            }
          }
        },
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "additionalProperties": true,
          "type": "object"
        },
        "attributes": {
          "description": "Entity attributes",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "path": {
              "type": "object",
              "title": "URL alias",
              "properties": {
                "langcode": {
                  "type": "string",
                  "title": "Language"
                },
                "alias": {
                  "type": "string",
                  "title": "Path alias"
                },
                "pid": {
                  "type": "integer",
                  "title": "Path id"
                },
                "pathauto": {
                  "description": "Whether an automated alias should be created or not.",
                  "type": "integer",
                  "title": "Pathauto state"
                }
              },
              "required": ["pathauto"]
            },
            "field_read_time": {
              "type": "string",
              "title": "Read time",
              "maxLength": 15
            },
            "langcode": {
              "type": "string",
              "title": "Language"
            },
            "field_description": {
              "type": "string",
              "title": "Description",
              "maxLength": 100
            },
            "field_industry_category": {
              "type": "array",
              "title": "Industry Category",
              "items": {
                "type": "string",
                "title": "Text value",
                "enum": [
                  "Banking",
                  "Insurance",
                  "Healthcare"
                ]
              }
            },
            "field_publishing_date": {
              "title": "Publishing date",
              "type": "string"
            },
            "metatag": {
              "description": "The meta tags for the entity.",
              "type": "object",
              "title": "Metatags (Hidden field for JSON support)"
            },
            "field_document_type": {
              "type": "string",
              "title": "Document type",
              "enum": [
                "Whitepaper",
                "Article",
                "Market Research",
                "Broschure",
                "Case Study",
                "Infographic",
                "Factsheet"
              ]
            },
            "name": {
              "default": "",
              "type": "string",
              "title": "Name",
              "maxLength": 255
            },
            "field_solution_category": {
              "type": "array",
              "title": "Solution Category",
              "items": {
                "type": "string",
                "title": "Text value",
                "enum": [
                  "Document Management Services",
                  "Business Process Services",
                  "Intelligent Automation",
                  "Digital Transformatoin"
                ]
              }
            },
            "field_title": {
              "type": "string",
              "title": "Title",
              "maxLength": 255
            },
            "changed": {
              "format": "utc-millisec",
              "description": "The time the media item was last edited.",
              "type": "string",
              "title": "Changed"
            }
          },
          "required": [
            "name",
            "metatag",
            "path",
            "field_document_type"
          ]
        },
        "links": {
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": ["href"],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object"
              },
              "href": {
                "format": "uri - reference",
                "description": "A string containing the link's URL . ",
                "type": "string"
              }
            }
          },
          "type": "object"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "title": "Resource ID",
          "maxLength": 128
        },
        "type": {
          "description": "Resource type",
          "type": "string",
          "title": "type",
          "enum": ["media--document"]
        }
      }
    },
    "paragraph--multiple_column--data": {
      "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
      "additionalProperties": false,
      "type": "object",
      "required": [
        "type",
        "id"
      ],
      "properties": {
        "relationships": {
          "description": "Entity relationships",
          "additionalProperties": false,
          "type": "object",
          "properties": {"field_multiple_column_item": {
            "type": "object",
            "title": "Multiple Column Item",
            "properties": {"data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "id": {
                    "format": "uuid",
                    "type": "string",
                    "title": "Resource ID",
                    "maxLength": 128
                  },
                  "type": {
                    "type": "string",
                    "title": "Referenced resource",
                    "enum": ["paragraph--multiple_column_item"]
                  }
                }
              }
            }}
          }}
        },
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "additionalProperties": true,
          "type": "object"
        },
        "attributes": {
          "description": "Entity attributes",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "langcode": {
              "type": "string",
              "title": "Language"
            },
            "field_bg_color_paragraph": {
              "type": "object",
              "title": "Background Color",
              "properties": {
                "color": {
                  "type": "string",
                  "title": "Color"
                },
                "opacity": {
                  "type": "float",
                  "title": "Opacity"
                }
              }
            },
            "field_margin_top": {
              "default": 1,
              "type": "integer",
              "title": "Margin Top"
            },
            "field_hide_section_pragraph": {
              "type": "boolean",
              "title": "Hide section"
            },
            "drupal_internal__id": {
              "type": "integer",
              "title": "ID"
            },
            "field_margin_bottom": {
              "default": 1,
              "type": "integer",
              "title": "Margin Bottom"
            }
          },
          "required": ["drupal_internal__id"]
        },
        "links": {
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": ["href"],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object"
              },
              "href": {
                "format": "uri - reference",
                "description": "A string containing the link's URL . ",
                "type": "string"
              }
            }
          },
          "type": "object"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "title": "Resource ID",
          "maxLength": 128
        },
        "type": {
          "description": "Resource type",
          "type": "string",
          "title": "type",
          "enum": ["paragraph--multiple_column"]
        }
      }
    },
    "paragraph--testimonial_slider": {
      "description": "Describes the payload for 'paragraph' entities of the 'testimonial_slider' bundle.",
      "additionalProperties": true,
      "title": "paragraph:testimonial_slider Schema",
      "type": "object",
      "required": ["data"],
      "properties": {
        "jsonapi": {
          "description": "An object describing the server's implementation",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "version": {"type": "string"}
          }
        },
        "data": {"$ref": "#/definitions/paragraph--testimonial_slider--data"},
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "additionalProperties": true,
          "type": "object"
        },
        "links": {
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": ["href"],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object"
              },
              "href": {
                "format": "uri - reference",
                "description": "A string containing the link's URL . ",
                "type": "string"
              }
            }
          },
          "type": "object"
        }
      }
    },
    "node--neuigkeiten--data": {
      "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
      "additionalProperties": false,
      "type": "object",
      "required": [
        "type",
        "id"
      ],
      "properties": {
        "relationships": {
          "description": "Members of the relationships object('relationships\\\") represent references from the resource object in which it's defined to other resource objects . ",
          "additionalProperties": false,
          "type": "object"
        },
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "additionalProperties": true,
          "type": "object"
        },
        "attributes": {
          "description": "Entity attributes",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "path": {
              "type": "object",
              "title": "URL alias",
              "properties": {
                "langcode": {
                  "type": "string",
                  "title": "Language"
                },
                "alias": {
                  "type": "string",
                  "title": "Path alias"
                },
                "pid": {
                  "type": "integer",
                  "title": "Path id"
                },
                "pathauto": {
                  "description": "Whether an automated alias should be created or not.",
                  "type": "integer",
                  "title": "Pathauto state"
                }
              },
              "required": ["pathauto"]
            },
            "field_text": {
              "type": "string",
              "title": "Text"
            },
            "field_bildpfad": {
              "type": "string",
              "title": "Bildpfad",
              "maxLength": 255
            },
            "field_publikationsdatum": {
              "default": {
                "default_date_type": "now",
                "default_date": "now"
              },
              "type": "object",
              "title": "Publikationsdatum",
              "properties": {"value": {
                "format": "date",
                "type": "string",
                "title": "Date value"
              }},
              "required": ["value"]
            },
            "title": {
              "type": "string",
              "title": "Title",
              "maxLength": 255
            }
          },
          "required": [
            "title",
            "path"
          ]
        },
        "links": {
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": ["href"],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object"
              },
              "href": {
                "format": "uri - reference",
                "description": "A string containing the link's URL . ",
                "type": "string"
              }
            }
          },
          "type": "object"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "title": "Resource ID",
          "maxLength": 128
        },
        "type": {
          "description": "Resource type",
          "type": "string",
          "title": "type",
          "enum": ["node--neuigkeiten"]
        }
      }
    },
    "file--file": {
      "description": "Describes the payload for 'file' entities.",
      "additionalProperties": true,
      "title": "file Schema",
      "type": "object",
      "required": ["data"],
      "properties": {
        "jsonapi": {
          "description": "An object describing the server's implementation",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "version": {"type": "string"}
          }
        },
        "data": {"$ref": "#/definitions/file--file--data"},
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "additionalProperties": true,
          "type": "object"
        },
        "links": {
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": ["href"],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object"
              },
              "href": {
                "format": "uri - reference",
                "description": "A string containing the link's URL . ",
                "type": "string"
              }
            }
          },
          "type": "object"
        }
      }
    },
    "paragraph--multiple_column_item": {
      "description": "Describes the payload for 'paragraph' entities of the 'multiple_column_item' bundle.",
      "additionalProperties": true,
      "title": "paragraph:multiple_column_item Schema",
      "type": "object",
      "required": ["data"],
      "properties": {
        "jsonapi": {
          "description": "An object describing the server's implementation",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "version": {"type": "string"}
          }
        },
        "data": {"$ref": "#/definitions/paragraph--multiple_column_item--data"},
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "additionalProperties": true,
          "type": "object"
        },
        "links": {
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": ["href"],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object"
              },
              "href": {
                "format": "uri - reference",
                "description": "A string containing the link's URL . ",
                "type": "string"
              }
            }
          },
          "type": "object"
        }
      }
    },
    "node--neuigkeiten": {
      "description": "Describes the payload for 'node' entities of the 'neuigkeiten' bundle.",
      "additionalProperties": true,
      "title": "node:neuigkeiten Schema",
      "type": "object",
      "required": ["data"],
      "properties": {
        "jsonapi": {
          "description": "An object describing the server's implementation",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "version": {"type": "string"}
          }
        },
        "data": {"$ref": "#/definitions/node--neuigkeiten--data"},
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "additionalProperties": true,
          "type": "object"
        },
        "links": {
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": ["href"],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object"
              },
              "href": {
                "format": "uri - reference",
                "description": "A string containing the link's URL . ",
                "type": "string"
              }
            }
          },
          "type": "object"
        }
      }
    },
    "paragraph--free_text--data": {
      "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
      "additionalProperties": false,
      "type": "object",
      "required": [
        "type",
        "id"
      ],
      "properties": {
        "relationships": {
          "description": "Entity relationships",
          "additionalProperties": false,
          "type": "object",
          "properties": {"paragraph_type": {
            "type": "object",
            "title": "Paragraph type",
            "properties": {"data": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "id": {
                  "format": "uuid",
                  "type": "string",
                  "title": "Resource ID",
                  "maxLength": 128
                },
                "type": {
                  "type": "string",
                  "title": "Referenced resource",
                  "enum": ["paragraphs_type--paragraphs_type"]
                }
              }
            }}
          }}
        },
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "additionalProperties": true,
          "type": "object"
        },
        "attributes": {
          "description": "Entity attributes",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "parent_field_name": {
              "description": "The entity parent field name to which this entity is referenced.",
              "type": "string",
              "title": "Parent field name",
              "maxLength": 32
            },
            "langcode": {
              "type": "string",
              "title": "Language"
            },
            "field_bg_color_paragraph": {
              "type": "object",
              "title": "Background Color",
              "properties": {
                "color": {
                  "type": "string",
                  "title": "Color"
                },
                "opacity": {
                  "type": "float",
                  "title": "Opacity"
                }
              }
            },
            "field_margin_top": {
              "default": 1,
              "type": "integer",
              "title": "Margin Top"
            },
            "parent_id": {
              "description": "The ID of the parent entity of which this entity is referenced.",
              "type": "string",
              "title": "Parent ID",
              "maxLength": 255
            },
            "field_hide_section_pragraph": {
              "type": "boolean",
              "title": "Hide section"
            },
            "field_text_ft": {
              "title": "Body",
              "type": "object",
              "properties": {
                "summary": {"type": "string"},
                "processed": {"type": "string"},
                "format": {"type": "string"}
              }
            },
            "parent_type": {
              "description": "The entity parent type to which this entity is referenced.",
              "type": "string",
              "title": "Parent type",
              "maxLength": 32
            },
            "drupal_internal__id": {
              "type": "integer",
              "title": "ID"
            },
            "field_margin_bottom": {
              "default": 1,
              "type": "integer",
              "title": "Margin Bottom"
            }
          },
          "required": ["drupal_internal__id"]
        },
        "links": {
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": ["href"],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object"
              },
              "href": {
                "format": "uri - reference",
                "description": "A string containing the link's URL . ",
                "type": "string"
              }
            }
          },
          "type": "object"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "title": "Resource ID",
          "maxLength": 128
        },
        "type": {
          "description": "Resource type",
          "type": "string",
          "title": "type",
          "enum": ["paragraph--free_text"]
        }
      }
    },
    "paragraph--related_solutions--data": {
      "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
      "additionalProperties": false,
      "type": "object",
      "required": [
        "type",
        "id"
      ],
      "properties": {
        "relationships": {
          "description": "Entity relationships",
          "additionalProperties": false,
          "type": "object",
          "properties": {"field_solutions": {
            "maxItems": 8,
            "type": "object",
            "title": "Solutions",
            "properties": {"data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "id": {
                    "format": "uuid",
                    "type": "string",
                    "title": "Resource ID",
                    "maxLength": 128
                  },
                  "type": {
                    "type": "string",
                    "title": "Referenced resource",
                    "enum": ["node--page"]
                  }
                }
              }
            }}
          }}
        },
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "additionalProperties": true,
          "type": "object"
        },
        "attributes": {
          "description": "Entity attributes",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "langcode": {
              "type": "string",
              "title": "Language"
            },
            "field_bg_color_paragraph": {
              "type": "object",
              "title": "Background Color",
              "properties": {
                "color": {
                  "type": "string",
                  "title": "Color"
                },
                "opacity": {
                  "type": "float",
                  "title": "Opacity"
                }
              }
            },
            "field_margin_top": {
              "default": 1,
              "type": "integer",
              "title": "Margin Top"
            },
            "field_hide_section_pragraph": {
              "type": "boolean",
              "title": "Hide section"
            },
            "drupal_internal__id": {
              "type": "integer",
              "title": "ID"
            },
            "field_margin_bottom": {
              "default": 1,
              "type": "integer",
              "title": "Margin Bottom"
            }
          },
          "required": ["drupal_internal__id"]
        },
        "links": {
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": ["href"],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object"
              },
              "href": {
                "format": "uri - reference",
                "description": "A string containing the link's URL . ",
                "type": "string"
              }
            }
          },
          "type": "object"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "title": "Resource ID",
          "maxLength": 128
        },
        "type": {
          "description": "Resource type",
          "type": "string",
          "title": "type",
          "enum": ["paragraph--related_solutions"]
        }
      }
    },
    "paragraph--cta": {
      "description": "Describes the payload for 'paragraph' entities of the 'cta' bundle.",
      "additionalProperties": true,
      "title": "paragraph:cta Schema",
      "type": "object",
      "required": ["data"],
      "properties": {
        "jsonapi": {
          "description": "An object describing the server's implementation",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "version": {"type": "string"}
          }
        },
        "data": {"$ref": "#/definitions/paragraph--cta--data"},
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "additionalProperties": true,
          "type": "object"
        },
        "links": {
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": ["href"],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object"
              },
              "href": {
                "format": "uri - reference",
                "description": "A string containing the link's URL . ",
                "type": "string"
              }
            }
          },
          "type": "object"
        }
      }
    },
    "file--file--data": {
      "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
      "additionalProperties": false,
      "type": "object",
      "required": [
        "type",
        "id"
      ],
      "properties": {
        "relationships": {
          "description": "Entity relationships",
          "additionalProperties": false,
          "type": "object",
          "properties": {"uid": {
            "type": "object",
            "title": "User ID",
            "properties": {"data": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "id": {
                  "format": "uuid",
                  "type": "string",
                  "title": "Resource ID",
                  "maxLength": 128
                },
                "type": {
                  "type": "string",
                  "title": "Referenced resource",
                  "enum": ["user--user"]
                }
              }
            }}
          }}
        },
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "additionalProperties": true,
          "type": "object"
        },
        "attributes": {
          "description": "Entity attributes",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "langcode": {
              "type": "string",
              "title": "Language"
            },
            "filename": {
              "description": "Name of the file with no path components.",
              "type": "string",
              "title": "Filename",
              "maxLength": 255
            },
            "filemime": {
              "description": "The file\\'s MIME type.",
              "type": "string",
              "title": "File MIME type",
              "maxLength": 255
            },
            "filesize": {
              "description": "The size of the file in bytes.",
              "type": "integer",
              "title": "File size"
            },
            "uri": {
              "description": "The URI to access the file (either local or remote).",
              "type": "object",
              "title": "File URI",
              "properties": {
                "value": {
                  "type": "string",
                  "title": "URI value",
                  "maxLength": 255
                },
                "url": {
                  "type": "string",
                  "title": "Root-relative file URL"
                }
              },
              "required": [
                "value",
                "url"
              ]
            },
            "image_style_uri": {
              "description": "Image styles of the file entity",
              "type": "object",
              "title": "Entity image styles"
            },
            "status": {
              "default": false,
              "description": "The status of the file, temporary (FALSE) and permanent (TRUE).",
              "type": "boolean",
              "title": "Status"
            }
          },
          "required": ["image_style_uri"]
        },
        "links": {
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": ["href"],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object"
              },
              "href": {
                "format": "uri - reference",
                "description": "A string containing the link's URL . ",
                "type": "string"
              }
            }
          },
          "type": "object"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "title": "Resource ID",
          "maxLength": 128
        },
        "type": {
          "description": "Resource type",
          "type": "string",
          "title": "type",
          "enum": ["file--file"]
        }
      }
    },
    "paragraph--text_media_box": {
      "description": "Describes the payload for 'paragraph' entities of the 'text_media_box' bundle.",
      "additionalProperties": true,
      "title": "paragraph:text_media_box Schema",
      "type": "object",
      "required": ["data"],
      "properties": {
        "jsonapi": {
          "description": "An object describing the server's implementation",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "version": {"type": "string"}
          }
        },
        "data": {"$ref": "#/definitions/paragraph--text_media_box--data"},
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "additionalProperties": true,
          "type": "object"
        },
        "links": {
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": ["href"],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object"
              },
              "href": {
                "format": "uri - reference",
                "description": "A string containing the link's URL . ",
                "type": "string"
              }
            }
          },
          "type": "object"
        }
      }
    },
    "node--page": {
      "description": "Use basic pages for your static content, such as an \\'About us\\' page.",
      "additionalProperties": true,
      "title": "node:page Schema",
      "type": "object",
      "required": ["data"],
      "properties": {
        "jsonapi": {
          "description": "An object describing the server's implementation",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "version": {"type": "string"}
          }
        },
        "data": {"$ref": "#/definitions/node--page--data"},
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "additionalProperties": true,
          "type": "object"
        },
        "links": {
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": ["href"],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object"
              },
              "href": {
                "format": "uri - reference",
                "description": "A string containing the link's URL . ",
                "type": "string"
              }
            }
          },
          "type": "object"
        }
      }
    },
    "paragraph--related_solutions": {
      "description": "Describes the payload for 'paragraph' entities of the 'related_solutions' bundle.",
      "additionalProperties": true,
      "title": "paragraph:related_solutions Schema",
      "type": "object",
      "required": ["data"],
      "properties": {
        "jsonapi": {
          "description": "An object describing the server's implementation",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "version": {"type": "string"}
          }
        },
        "data": {"$ref": "#/definitions/paragraph--related_solutions--data"},
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "additionalProperties": true,
          "type": "object"
        },
        "links": {
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": ["href"],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object"
              },
              "href": {
                "format": "uri - reference",
                "description": "A string containing the link's URL . ",
                "type": "string"
              }
            }
          },
          "type": "object"
        }
      }
    },
    "menu_link_content--footer--data": {
      "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
      "additionalProperties": false,
      "type": "object",
      "required": [
        "type",
        "id"
      ],
      "properties": {
        "relationships": {
          "description": "Members of the relationships object('relationships\\\") represent references from the resource object in which it's defined to other resource objects . ",
          "additionalProperties": false,
          "type": "object"
        },
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "additionalProperties": true,
          "type": "object"
        },
        "attributes": {
          "description": "Entity attributes",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "parent": {
              "description": "The ID of the parent menu link plugin, or empty string when at the top level of the hierarchy.",
              "type": "string",
              "title": "Parent plugin ID",
              "maxLength": 255
            },
            "langcode": {
              "type": "string",
              "title": "Language"
            },
            "external": {
              "default": false,
              "description": "A flag to indicate if the link points to a full URL starting with a protocol, like http:// (1 = external, 0 = internal).",
              "type": "boolean",
              "title": "External"
            },
            "metatag": {
              "description": "The meta tags for the entity.",
              "type": "object",
              "title": "Metatags (Hidden field for JSON support)"
            },
            "menu_name": {
              "default": "tools",
              "description": "The menu name. All links with the same menu name (such as \\\"tools\\\") are part of the same menu.",
              "type": "string",
              "title": "Menu name",
              "maxLength": 255
            },
            "link": {
              "description": "The location this menu link points to.",
              "title": "Link",
              "type": "object",
              "properties": {
                "title": {"type": "string"},
                "uri": {"type": "string"},
                "uuid": {"type": "string"},
                "url": {"type": "string"}
              }
            },
            "description": {
              "description": "Shown when hovering over the menu link.",
              "type": "string",
              "title": "Description",
              "maxLength": 255
            },
            "weight": {
              "default": 0,
              "description": "Link weight among links in the same menu at the same depth. In the menu, the links with high weight will sink and links with a low weight will be positioned nearer the top.",
              "type": "integer",
              "title": "Weight"
            },
            "title": {
              "description": "The text to be used for this link in the menu.",
              "type": "string",
              "title": "Menu link title",
              "maxLength": 255
            },
            "enabled": {
              "default": true,
              "description": "A flag for whether the link should be enabled in menus or hidden.",
              "type": "boolean",
              "title": "Enabled"
            },
            "drupal_internal__id": {
              "description": "The entity ID for this menu link content entity.",
              "type": "integer",
              "title": "Entity ID"
            },
            "changed": {
              "format": "utc-millisec",
              "description": "The time that the menu link was last edited.",
              "type": "string",
              "title": "Changed"
            }
          },
          "required": [
            "drupal_internal__id",
            "title",
            "link",
            "metatag"
          ]
        },
        "links": {
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": ["href"],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object"
              },
              "href": {
                "format": "uri - reference",
                "description": "A string containing the link's URL . ",
                "type": "string"
              }
            }
          },
          "type": "object"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "title": "Resource ID",
          "maxLength": 128
        },
        "type": {
          "description": "Resource type",
          "type": "string",
          "title": "type",
          "enum": ["menu_link_content--footer"]
        }
      }
    },
    "menu_link_content--footer": {
      "description": "Describes the payload for 'menu_link_content' entities of the 'footer' bundle.",
      "additionalProperties": true,
      "title": "menu_link_content:footer Schema",
      "type": "object",
      "required": ["data"],
      "properties": {
        "jsonapi": {
          "description": "An object describing the server's implementation",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "version": {"type": "string"}
          }
        },
        "data": {"$ref": "#/definitions/menu_link_content--footer--data"},
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "additionalProperties": true,
          "type": "object"
        },
        "links": {
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": ["href"],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object"
              },
              "href": {
                "format": "uri - reference",
                "description": "A string containing the link's URL . ",
                "type": "string"
              }
            }
          },
          "type": "object"
        }
      }
    },
    "menu_link_content--main": {
      "description": "Describes the payload for 'menu_link_content' entities of the 'main' bundle.",
      "additionalProperties": true,
      "title": "menu_link_content:main Schema",
      "type": "object",
      "required": ["data"],
      "properties": {
        "jsonapi": {
          "description": "An object describing the server's implementation",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "version": {"type": "string"}
          }
        },
        "data": {"$ref": "#/definitions/menu_link_content--main--data"},
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "additionalProperties": true,
          "type": "object"
        },
        "links": {
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": ["href"],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object"
              },
              "href": {
                "format": "uri - reference",
                "description": "A string containing the link's URL . ",
                "type": "string"
              }
            }
          },
          "type": "object"
        }
      }
    },
    "paragraph--testimonial_slider--data": {
      "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
      "additionalProperties": false,
      "type": "object",
      "required": [
        "type",
        "id"
      ],
      "properties": {
        "relationships": {
          "description": "Entity relationships",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "paragraph_type": {
              "type": "object",
              "title": "Paragraph type",
              "properties": {"data": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "id": {
                    "format": "uuid",
                    "type": "string",
                    "title": "Resource ID",
                    "maxLength": 128
                  },
                  "type": {
                    "type": "string",
                    "title": "Referenced resource",
                    "enum": ["paragraphs_type--paragraphs_type"]
                  }
                }
              }}
            },
            "field_testimonial_slider": {
              "maxItems": 4,
              "type": "object",
              "title": "Testimonials",
              "properties": {"data": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "format": "uuid",
                      "type": "string",
                      "title": "Resource ID",
                      "maxLength": 128
                    },
                    "type": {
                      "type": "string",
                      "title": "Referenced resource",
                      "enum": ["paragraph--testimonial"]
                    }
                  }
                }
              }}
            }
          }
        },
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "additionalProperties": true,
          "type": "object"
        },
        "attributes": {
          "description": "Entity attributes",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "parent_field_name": {
              "description": "The entity parent field name to which this entity is referenced.",
              "type": "string",
              "title": "Parent field name",
              "maxLength": 32
            },
            "langcode": {
              "type": "string",
              "title": "Language"
            },
            "field_bg_color_paragraph": {
              "type": "object",
              "title": "Background Color",
              "properties": {
                "color": {
                  "type": "string",
                  "title": "Color"
                },
                "opacity": {
                  "type": "float",
                  "title": "Opacity"
                }
              }
            },
            "field_margin_top": {
              "default": 1,
              "type": "integer",
              "title": "Margin Top"
            },
            "parent_id": {
              "description": "The ID of the parent entity of which this entity is referenced.",
              "type": "string",
              "title": "Parent ID",
              "maxLength": 255
            },
            "field_hide_section_pragraph": {
              "type": "boolean",
              "title": "Hide section"
            },
            "parent_type": {
              "description": "The entity parent type to which this entity is referenced.",
              "type": "string",
              "title": "Parent type",
              "maxLength": 32
            },
            "drupal_internal__id": {
              "type": "integer",
              "title": "ID"
            },
            "field_margin_bottom": {
              "default": 1,
              "type": "integer",
              "title": "Margin Bottom"
            }
          },
          "required": ["drupal_internal__id"]
        },
        "links": {
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": ["href"],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object"
              },
              "href": {
                "format": "uri - reference",
                "description": "A string containing the link's URL . ",
                "type": "string"
              }
            }
          },
          "type": "object"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "title": "Resource ID",
          "maxLength": 128
        },
        "type": {
          "description": "Resource type",
          "type": "string",
          "title": "type",
          "enum": ["paragraph--testimonial_slider"]
        }
      }
    },
    "paragraph--testimonial--data": {
      "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
      "additionalProperties": false,
      "type": "object",
      "required": [
        "type",
        "id"
      ],
      "properties": {
        "relationships": {
          "description": "Entity relationships",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "field_media_testimonial": {
              "type": "object",
              "title": "Image",
              "properties": {"data": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "id": {
                    "format": "uuid",
                    "type": "string",
                    "title": "Resource ID",
                    "maxLength": 128
                  },
                  "type": {
                    "type": "string",
                    "title": "Referenced resource",
                    "enum": ["media--image"]
                  }
                }
              }}
            },
            "paragraph_type": {
              "type": "object",
              "title": "Paragraph type",
              "properties": {"data": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "id": {
                    "format": "uuid",
                    "type": "string",
                    "title": "Resource ID",
                    "maxLength": 128
                  },
                  "type": {
                    "type": "string",
                    "title": "Referenced resource",
                    "enum": ["paragraphs_type--paragraphs_type"]
                  }
                }
              }}
            },
            "field_document_testimonial": {
              "maxItems": 2,
              "type": "object",
              "title": "Document",
              "properties": {"data": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "format": "uuid",
                      "type": "string",
                      "title": "Resource ID",
                      "maxLength": 128
                    },
                    "type": {
                      "type": "string",
                      "title": "Referenced resource",
                      "enum": ["media--document"]
                    }
                  }
                }
              }}
            }
          }
        },
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "additionalProperties": true,
          "type": "object"
        },
        "attributes": {
          "description": "Entity attributes",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "parent_field_name": {
              "description": "The entity parent field name to which this entity is referenced.",
              "type": "string",
              "title": "Parent field name",
              "maxLength": 32
            },
            "langcode": {
              "type": "string",
              "title": "Language"
            },
            "field_customer_testimonial": {
              "type": "string",
              "title": "Customer",
              "maxLength": 50
            },
            "parent_id": {
              "description": "The ID of the parent entity of which this entity is referenced.",
              "type": "string",
              "title": "Parent ID",
              "maxLength": 255
            },
            "field_quote_testimonial": {
              "type": "string",
              "title": "Quote"
            },
            "parent_type": {
              "description": "The entity parent type to which this entity is referenced.",
              "type": "string",
              "title": "Parent type",
              "maxLength": 32
            },
            "drupal_internal__id": {
              "type": "integer",
              "title": "ID"
            }
          },
          "required": [
            "drupal_internal__id",
            "field_customer_testimonial",
            "field_quote_testimonial"
          ]
        },
        "links": {
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": ["href"],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object"
              },
              "href": {
                "format": "uri - reference",
                "description": "A string containing the link's URL . ",
                "type": "string"
              }
            }
          },
          "type": "object"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "title": "Resource ID",
          "maxLength": 128
        },
        "type": {
          "description": "Resource type",
          "type": "string",
          "title": "type",
          "enum": ["paragraph--testimonial"]
        }
      }
    },
    "paragraph--divider--data": {
      "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
      "additionalProperties": false,
      "type": "object",
      "required": [
        "type",
        "id"
      ],
      "properties": {
        "relationships": {
          "description": "Members of the relationships object('relationships\\\") represent references from the resource object in which it's defined to other resource objects . ",
          "additionalProperties": false,
          "type": "object"
        },
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "additionalProperties": true,
          "type": "object"
        },
        "attributes": {
          "description": "Entity attributes",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "langcode": {
              "type": "string",
              "title": "Language"
            },
            "field_hide_section_pragraph": {
              "default": false,
              "type": "boolean",
              "title": "Hide section"
            },
            "field_without_syling_divider": {
              "default": false,
              "type": "boolean",
              "title": "Without syling"
            },
            "drupal_internal__id": {
              "type": "integer",
              "title": "ID"
            }
          },
          "required": ["drupal_internal__id"]
        },
        "links": {
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": ["href"],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object"
              },
              "href": {
                "format": "uri - reference",
                "description": "A string containing the link's URL . ",
                "type": "string"
              }
            }
          },
          "type": "object"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "title": "Resource ID",
          "maxLength": 128
        },
        "type": {
          "description": "Resource type",
          "type": "string",
          "title": "type",
          "enum": ["paragraph--divider"]
        }
      }
    },
    "paragraph--related_items--data": {
      "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
      "additionalProperties": false,
      "type": "object",
      "required": [
        "type",
        "id"
      ],
      "properties": {
        "relationships": {
          "description": "Entity relationships",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "field_related_items_ri": {
              "type": "object",
              "title": "Related Items",
              "properties": {"data": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "format": "uuid",
                      "type": "string",
                      "title": "Resource ID",
                      "maxLength": 128
                    },
                    "type": {
                      "type": "string",
                      "title": "Referenced resource",
                      "enum": ["media--document"]
                    }
                  }
                }
              }}
            },
            "paragraph_type": {
              "type": "object",
              "title": "Paragraph type",
              "properties": {"data": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "id": {
                    "format": "uuid",
                    "type": "string",
                    "title": "Resource ID",
                    "maxLength": 128
                  },
                  "type": {
                    "type": "string",
                    "title": "Referenced resource",
                    "enum": ["paragraphs_type--paragraphs_type"]
                  }
                }
              }}
            }
          }
        },
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "additionalProperties": true,
          "type": "object"
        },
        "attributes": {
          "description": "Entity attributes",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "parent_field_name": {
              "description": "The entity parent field name to which this entity is referenced.",
              "type": "string",
              "title": "Parent field name",
              "maxLength": 32
            },
            "field_link_relateditems": {
              "title": "Link",
              "type": "object",
              "properties": {
                "title": {"type": "string"},
                "uri": {"type": "string"},
                "uuid": {"type": "string"},
                "url": {"type": "string"}
              }
            },
            "langcode": {
              "type": "string",
              "title": "Language"
            },
            "field_bg_color_paragraph": {
              "type": "object",
              "title": "Background Color",
              "properties": {
                "color": {
                  "type": "string",
                  "title": "Color"
                },
                "opacity": {
                  "type": "float",
                  "title": "Opacity"
                }
              }
            },
            "field_title_relateditems": {
              "type": "string",
              "title": "Headline",
              "maxLength": 35
            },
            "field_margin_top": {
              "default": 1,
              "type": "integer",
              "title": "Margin Top"
            },
            "parent_id": {
              "description": "The ID of the parent entity of which this entity is referenced.",
              "type": "string",
              "title": "Parent ID",
              "maxLength": 255
            },
            "field_hide_section_pragraph": {
              "type": "boolean",
              "title": "Hide section"
            },
            "parent_type": {
              "description": "The entity parent type to which this entity is referenced.",
              "type": "string",
              "title": "Parent type",
              "maxLength": 32
            },
            "drupal_internal__id": {
              "type": "integer",
              "title": "ID"
            },
            "field_margin_bottom": {
              "default": 1,
              "type": "integer",
              "title": "Margin Bottom"
            }
          },
          "required": ["drupal_internal__id"]
        },
        "links": {
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": ["href"],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object"
              },
              "href": {
                "format": "uri - reference",
                "description": "A string containing the link's URL . ",
                "type": "string"
              }
            }
          },
          "type": "object"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "title": "Resource ID",
          "maxLength": 128
        },
        "type": {
          "description": "Resource type",
          "type": "string",
          "title": "type",
          "enum": ["paragraph--related_items"]
        }
      }
    },
    "paragraph--section_headline": {
      "description": "Describes the payload for 'paragraph' entities of the 'section_headline' bundle.",
      "additionalProperties": true,
      "title": "paragraph:section_headline Schema",
      "type": "object",
      "required": ["data"],
      "properties": {
        "jsonapi": {
          "description": "An object describing the server's implementation",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "version": {"type": "string"}
          }
        },
        "data": {"$ref": "#/definitions/paragraph--section_headline--data"},
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "additionalProperties": true,
          "type": "object"
        },
        "links": {
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": ["href"],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object"
              },
              "href": {
                "format": "uri - reference",
                "description": "A string containing the link's URL . ",
                "type": "string"
              }
            }
          },
          "type": "object"
        }
      }
    },
    "paragraph--multiple_column_item--data": {
      "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
      "additionalProperties": false,
      "type": "object",
      "required": [
        "type",
        "id"
      ],
      "properties": {
        "relationships": {
          "description": "Entity relationships",
          "additionalProperties": false,
          "type": "object",
          "properties": {"field_image_multiplecolumn": {
            "type": "object",
            "title": "Image",
            "properties": {"data": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "id": {
                  "format": "uuid",
                  "type": "string",
                  "title": "Resource ID",
                  "maxLength": 128
                },
                "type": {
                  "type": "string",
                  "title": "Referenced resource",
                  "enum": ["media--image"]
                }
              }
            }}
          }}
        },
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "additionalProperties": true,
          "type": "object"
        },
        "attributes": {
          "description": "Entity attributes",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "langcode": {
              "type": "string",
              "title": "Language"
            },
            "field_title_multiplecolumn": {
              "type": "string",
              "title": "Headline",
              "maxLength": 75
            },
            "field_image_size_tmi": {
              "default": "100",
              "type": "string",
              "title": "Image size",
              "enum": [
                20,
                40,
                60,
                80,
                100
              ]
            },
            "drupal_internal__id": {
              "type": "integer",
              "title": "ID"
            },
            "field_description_multiplecolumn": {
              "type": "string",
              "title": "Description"
            }
          },
          "required": [
            "drupal_internal__id",
            "field_image_size_tmi",
            "field_title_multiplecolumn"
          ]
        },
        "links": {
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": ["href"],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object"
              },
              "href": {
                "format": "uri - reference",
                "description": "A string containing the link's URL . ",
                "type": "string"
              }
            }
          },
          "type": "object"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "title": "Resource ID",
          "maxLength": 128
        },
        "type": {
          "description": "Resource type",
          "type": "string",
          "title": "type",
          "enum": ["paragraph--multiple_column_item"]
        }
      }
    },
    "paragraph--multiple_column": {
      "description": "Describes the payload for 'paragraph' entities of the 'multiple_column' bundle.",
      "additionalProperties": true,
      "title": "paragraph:multiple_column Schema",
      "type": "object",
      "required": ["data"],
      "properties": {
        "jsonapi": {
          "description": "An object describing the server's implementation",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "version": {"type": "string"}
          }
        },
        "data": {"$ref": "#/definitions/paragraph--multiple_column--data"},
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "additionalProperties": true,
          "type": "object"
        },
        "links": {
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": ["href"],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object"
              },
              "href": {
                "format": "uri - reference",
                "description": "A string containing the link's URL . ",
                "type": "string"
              }
            }
          },
          "type": "object"
        }
      }
    },
    "paragraph--hero": {
      "description": "Describes the payload for 'paragraph' entities of the 'hero' bundle.",
      "additionalProperties": true,
      "title": "paragraph:hero Schema",
      "type": "object",
      "required": ["data"],
      "properties": {
        "jsonapi": {
          "description": "An object describing the server's implementation",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "version": {"type": "string"}
          }
        },
        "data": {"$ref": "#/definitions/paragraph--hero--data"},
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "additionalProperties": true,
          "type": "object"
        },
        "links": {
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": ["href"],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object"
              },
              "href": {
                "format": "uri - reference",
                "description": "A string containing the link's URL . ",
                "type": "string"
              }
            }
          },
          "type": "object"
        }
      }
    },
    "paragraph--related_items": {
      "description": "Describes the payload for 'paragraph' entities of the 'related_items' bundle.",
      "additionalProperties": true,
      "title": "paragraph:related_items Schema",
      "type": "object",
      "required": ["data"],
      "properties": {
        "jsonapi": {
          "description": "An object describing the server's implementation",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "version": {"type": "string"}
          }
        },
        "data": {"$ref": "#/definitions/paragraph--related_items--data"},
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "additionalProperties": true,
          "type": "object"
        },
        "links": {
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": ["href"],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object"
              },
              "href": {
                "format": "uri - reference",
                "description": "A string containing the link's URL . ",
                "type": "string"
              }
            }
          },
          "type": "object"
        }
      }
    },
    "paragraph--text_media_box--data": {
      "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
      "additionalProperties": false,
      "type": "object",
      "required": [
        "type",
        "id"
      ],
      "properties": {
        "relationships": {
          "description": "Entity relationships",
          "additionalProperties": false,
          "type": "object",
          "properties": {"field_media_mediabox": {
            "type": "object",
            "title": "Media",
            "properties": {"data": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "id": {
                  "format": "uuid",
                  "type": "string",
                  "title": "Resource ID",
                  "maxLength": 128
                },
                "type": {
                  "type": "string",
                  "title": "Referenced resource",
                  "enum": [
                    "media--image",
                    "media--remote_video"
                  ]
                }
              }
            }}
          }}
        },
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "additionalProperties": true,
          "type": "object"
        },
        "attributes": {
          "description": "Entity attributes",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "langcode": {
              "type": "string",
              "title": "Language"
            },
            "field_bg_color_paragraph": {
              "type": "object",
              "title": "Background Color",
              "properties": {
                "color": {
                  "type": "string",
                  "title": "Color"
                },
                "opacity": {
                  "type": "float",
                  "title": "Opacity"
                }
              }
            },
            "field_title_mediabox": {
              "type": "string",
              "title": "Headline",
              "maxLength": 45
            },
            "field_margin_top": {
              "default": 1,
              "type": "integer",
              "title": "Margin Top"
            },
            "field_media_posistion_mediabox": {
              "default": "left",
              "type": "string",
              "title": "Media posistion",
              "enum": [
                "left",
                "right"
              ]
            },
            "field_headline_mediabox": {
              "type": "string",
              "title": "Subheadline"
            },
            "field_sub_headline_mediabox": {
              "type": "object",
              "title": "Text",
              "properties": {
                "summary": {
                  "type": "string",
                  "title": "Summary"
                },
                "format": {
                  "type": "string",
                  "title": "Text format"
                },
                "value": {
                  "type": "string",
                  "title": "Text"
                }
              },
              "required": ["value"]
            },
            "field_hide_section_pragraph": {
              "type": "boolean",
              "title": "Hide section"
            },
            "field_cta_link_mediabox": {
              "title": "CTA Link",
              "type": "object",
              "properties": {
                "title": {"type": "string"},
                "uri": {"type": "string"},
                "uuid": {"type": "string"},
                "url": {"type": "string"}
              }
            },
            "drupal_internal__id": {
              "type": "integer",
              "title": "ID"
            },
            "field_margin_bottom": {
              "default": 1,
              "type": "integer",
              "title": "Margin Bottom"
            },
            "field_media_size_mediabox": {
              "default": "large",
              "type": "string",
              "title": "Media Size",
              "enum": [
                "large",
                "small"
              ]
            }
          },
          "required": [
            "drupal_internal__id",
            "field_media_posistion_mediabox",
            "field_media_size_mediabox",
            "field_title_mediabox"
          ]
        },
        "links": {
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": ["href"],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object"
              },
              "href": {
                "format": "uri - reference",
                "description": "A string containing the link's URL . ",
                "type": "string"
              }
            }
          },
          "type": "object"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "title": "Resource ID",
          "maxLength": 128
        },
        "type": {
          "description": "Resource type",
          "type": "string",
          "title": "type",
          "enum": ["paragraph--text_media_box"]
        }
      }
    },
    "media--remote_video": {
      "description": "Describes the payload for 'media' entities of the 'remote_video' bundle.",
      "additionalProperties": true,
      "title": "media:remote_video Schema",
      "type": "object",
      "required": ["data"],
      "properties": {
        "jsonapi": {
          "description": "An object describing the server's implementation",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "version": {"type": "string"}
          }
        },
        "data": {"$ref": "#/definitions/media--remote_video--data"},
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "additionalProperties": true,
          "type": "object"
        },
        "links": {
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": ["href"],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object"
              },
              "href": {
                "format": "uri - reference",
                "description": "A string containing the link's URL . ",
                "type": "string"
              }
            }
          },
          "type": "object"
        }
      }
    },
    "paragraph--hero_slider": {
      "description": "Describes the payload for 'paragraph' entities of the 'hero_slider' bundle.",
      "additionalProperties": true,
      "title": "paragraph:hero_slider Schema",
      "type": "object",
      "required": ["data"],
      "properties": {
        "jsonapi": {
          "description": "An object describing the server's implementation",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "version": {"type": "string"}
          }
        },
        "data": {"$ref": "#/definitions/paragraph--hero_slider--data"},
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "additionalProperties": true,
          "type": "object"
        },
        "links": {
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": ["href"],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object"
              },
              "href": {
                "format": "uri - reference",
                "description": "A string containing the link's URL . ",
                "type": "string"
              }
            }
          },
          "type": "object"
        }
      }
    },
    "paragraph--cta--data": {
      "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
      "additionalProperties": false,
      "type": "object",
      "required": [
        "type",
        "id"
      ],
      "properties": {
        "relationships": {
          "description": "Entity relationships",
          "additionalProperties": false,
          "type": "object",
          "properties": {"field_media_cta": {
            "type": "object",
            "title": "Image",
            "properties": {"data": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "id": {
                  "format": "uuid",
                  "type": "string",
                  "title": "Resource ID",
                  "maxLength": 128
                },
                "type": {
                  "type": "string",
                  "title": "Referenced resource",
                  "enum": ["media--image"]
                }
              }
            }}
          }}
        },
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "additionalProperties": true,
          "type": "object"
        },
        "attributes": {
          "description": "Entity attributes",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "field_cta_text": {
              "type": "string",
              "title": "Headline",
              "maxLength": 50
            },
            "langcode": {
              "type": "string",
              "title": "Language"
            },
            "field_bg_color_paragraph": {
              "type": "object",
              "title": "Background Color",
              "properties": {
                "color": {
                  "type": "string",
                  "title": "Color"
                },
                "opacity": {
                  "type": "float",
                  "title": "Opacity"
                }
              }
            },
            "field_margin_top": {
              "default": 1,
              "type": "integer",
              "title": "Margin Top"
            },
            "field_link_cta": {
              "title": "Link",
              "type": "object",
              "properties": {
                "title": {"type": "string"},
                "uri": {"type": "string"},
                "uuid": {"type": "string"},
                "url": {"type": "string"}
              }
            },
            "field_hide_section_pragraph": {
              "type": "boolean",
              "title": "Hide section"
            },
            "field_cta_subtext": {
              "type": "string",
              "title": "Text"
            },
            "drupal_internal__id": {
              "type": "integer",
              "title": "ID"
            },
            "field_margin_bottom": {
              "default": 1,
              "type": "integer",
              "title": "Margin Bottom"
            }
          },
          "required": [
            "drupal_internal__id",
            "field_cta_text",
            "field_link_cta"
          ]
        },
        "links": {
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": ["href"],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object"
              },
              "href": {
                "format": "uri - reference",
                "description": "A string containing the link's URL . ",
                "type": "string"
              }
            }
          },
          "type": "object"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "title": "Resource ID",
          "maxLength": 128
        },
        "type": {
          "description": "Resource type",
          "type": "string",
          "title": "type",
          "enum": ["paragraph--cta"]
        }
      }
    },
    "paragraph--hero_slider--data": {
      "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
      "additionalProperties": false,
      "type": "object",
      "required": [
        "type",
        "id"
      ],
      "properties": {
        "relationships": {
          "description": "Entity relationships",
          "additionalProperties": false,
          "type": "object",
          "properties": {"field_hero_item": {
            "maxItems": 3,
            "type": "object",
            "title": "Hero Item",
            "properties": {"data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "id": {
                    "format": "uuid",
                    "type": "string",
                    "title": "Resource ID",
                    "maxLength": 128
                  },
                  "type": {
                    "type": "string",
                    "title": "Referenced resource",
                    "enum": ["paragraph--hero"]
                  }
                }
              }
            }}
          }}
        },
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "additionalProperties": true,
          "type": "object"
        },
        "attributes": {
          "description": "Entity attributes",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "langcode": {
              "type": "string",
              "title": "Language"
            },
            "field_hide_section_pragraph": {
              "type": "boolean",
              "title": "Hide section"
            },
            "drupal_internal__id": {
              "type": "integer",
              "title": "ID"
            }
          },
          "required": ["drupal_internal__id"]
        },
        "links": {
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": ["href"],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object"
              },
              "href": {
                "format": "uri - reference",
                "description": "A string containing the link's URL . ",
                "type": "string"
              }
            }
          },
          "type": "object"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "title": "Resource ID",
          "maxLength": 128
        },
        "type": {
          "description": "Resource type",
          "type": "string",
          "title": "type",
          "enum": ["paragraph--hero_slider"]
        }
      }
    },
    "path_alias--path_alias": {
      "description": "Describes the payload for 'path_alias' entities.",
      "additionalProperties": true,
      "title": "path_alias Schema",
      "type": "object",
      "required": ["data"],
      "properties": {
        "jsonapi": {
          "description": "An object describing the server's implementation",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "version": {"type": "string"}
          }
        },
        "data": {"$ref": "#/definitions/path_alias--path_alias--data"},
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "additionalProperties": true,
          "type": "object"
        },
        "links": {
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": ["href"],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object"
              },
              "href": {
                "format": "uri - reference",
                "description": "A string containing the link's URL . ",
                "type": "string"
              }
            }
          },
          "type": "object"
        }
      }
    },
    "media--image--data": {
      "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
      "additionalProperties": false,
      "type": "object",
      "required": [
        "type",
        "id"
      ],
      "properties": {
        "relationships": {
          "description": "Entity relationships",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "uid": {
              "type": "object",
              "title": "Authored by",
              "properties": {"data": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "id": {
                    "format": "uuid",
                    "type": "string",
                    "title": "Resource ID",
                    "maxLength": 128
                  },
                  "type": {
                    "type": "string",
                    "title": "Referenced resource",
                    "enum": ["user--user"]
                  }
                }
              }}
            },
            "thumbnail": {
              "type": "object",
              "title": "Thumbnail",
              "properties": {"data": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "id": {
                    "format": "uuid",
                    "type": "string",
                    "title": "Resource ID",
                    "maxLength": 128
                  },
                  "type": {
                    "type": "string",
                    "title": "Referenced resource",
                    "enum": ["file--file"]
                  }
                }
              }}
            },
            "field_media_image": {
              "type": "object",
              "title": "Image",
              "properties": {"data": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "id": {
                    "format": "uuid",
                    "type": "string",
                    "title": "Resource ID",
                    "maxLength": 128
                  },
                  "type": {
                    "type": "string",
                    "title": "Referenced resource",
                    "enum": ["file--file"]
                  }
                }
              }}
            },
            "bundle": {
              "type": "object",
              "title": "Media type",
              "properties": {"data": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "id": {
                    "format": "uuid",
                    "type": "string",
                    "title": "Resource ID",
                    "maxLength": 128
                  },
                  "type": {
                    "type": "string",
                    "title": "Referenced resource",
                    "enum": ["media_type--media_type"]
                  }
                }
              }}
            }
          }
        },
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "additionalProperties": true,
          "type": "object"
        },
        "attributes": {
          "description": "Entity attributes",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "path": {
              "type": "object",
              "title": "URL alias",
              "properties": {
                "langcode": {
                  "type": "string",
                  "title": "Language"
                },
                "alias": {
                  "type": "string",
                  "title": "Path alias"
                },
                "pid": {
                  "type": "integer",
                  "title": "Path id"
                },
                "pathauto": {
                  "description": "Whether an automated alias should be created or not.",
                  "type": "integer",
                  "title": "Pathauto state"
                }
              },
              "required": ["pathauto"]
            },
            "langcode": {
              "type": "string",
              "title": "Language"
            },
            "metatag": {
              "description": "The meta tags for the entity.",
              "type": "object",
              "title": "Metatags (Hidden field for JSON support)"
            },
            "name": {
              "default": "",
              "type": "string",
              "title": "Name",
              "maxLength": 255
            },
            "default_langcode": {
              "default": true,
              "description": "A flag indicating whether this is the default translation.",
              "type": "boolean",
              "title": "Default translation"
            },
            "status": {
              "default": true,
              "type": "boolean",
              "title": "Published"
            }
          },
          "required": [
            "name",
            "metatag",
            "path"
          ]
        },
        "links": {
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": ["href"],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object"
              },
              "href": {
                "format": "uri - reference",
                "description": "A string containing the link's URL . ",
                "type": "string"
              }
            }
          },
          "type": "object"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "title": "Resource ID",
          "maxLength": 128
        },
        "type": {
          "description": "Resource type",
          "type": "string",
          "title": "type",
          "enum": ["media--image"]
        }
      }
    },
    "paragraph--text_marginal": {
      "description": "Describes the payload for 'paragraph' entities of the 'text_marginal' bundle.",
      "additionalProperties": true,
      "title": "paragraph:text_marginal Schema",
      "type": "object",
      "required": ["data"],
      "properties": {
        "jsonapi": {
          "description": "An object describing the server's implementation",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "version": {"type": "string"}
          }
        },
        "data": {"$ref": "#/definitions/paragraph--text_marginal--data"},
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "additionalProperties": true,
          "type": "object"
        },
        "links": {
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": ["href"],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object"
              },
              "href": {
                "format": "uri - reference",
                "description": "A string containing the link's URL . ",
                "type": "string"
              }
            }
          },
          "type": "object"
        }
      }
    },
    "paragraph--text_marginal--data": {
      "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
      "additionalProperties": false,
      "type": "object",
      "required": [
        "type",
        "id"
      ],
      "properties": {
        "relationships": {
          "description": "Entity relationships",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "field_document_textmarginal": {
              "type": "object",
              "title": "Document",
              "properties": {"data": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "id": {
                    "format": "uuid",
                    "type": "string",
                    "title": "Resource ID",
                    "maxLength": 128
                  },
                  "type": {
                    "type": "string",
                    "title": "Referenced resource",
                    "enum": ["media--document"]
                  }
                }
              }}
            },
            "paragraph_type": {
              "type": "object",
              "title": "Paragraph type",
              "properties": {"data": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "id": {
                    "format": "uuid",
                    "type": "string",
                    "title": "Resource ID",
                    "maxLength": 128
                  },
                  "type": {
                    "type": "string",
                    "title": "Referenced resource",
                    "enum": ["paragraphs_type--paragraphs_type"]
                  }
                }
              }}
            }
          }
        },
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "additionalProperties": true,
          "type": "object"
        },
        "attributes": {
          "description": "Entity attributes",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "langcode": {
              "type": "string",
              "title": "Language"
            },
            "field_bg_color_paragraph": {
              "type": "object",
              "title": "Background Color",
              "properties": {
                "color": {
                  "type": "string",
                  "title": "Color"
                },
                "opacity": {
                  "type": "float",
                  "title": "Opacity"
                }
              }
            },
            "field_margin_top": {
              "default": 1,
              "type": "integer",
              "title": "Margin Top"
            },
            "field_hide_section_pragraph": {
              "type": "boolean",
              "title": "Hide section"
            },
            "drupal_internal__id": {
              "type": "integer",
              "title": "ID"
            },
            "field_description_textmarginal": {
              "title": "Description",
              "type": "object",
              "properties": {
                "summary": {"type": "string"},
                "processed": {"type": "string"},
                "format": {"type": "string"}
              }
            },
            "field_margin_bottom": {
              "default": 1,
              "type": "integer",
              "title": "Margin Bottom"
            },
            "field_title_textmarginal": {
              "type": "string",
              "title": "Headline",
              "maxLength": 75
            }
          },
          "required": [
            "drupal_internal__id",
            "field_title_textmarginal"
          ]
        },
        "links": {
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": ["href"],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object"
              },
              "href": {
                "format": "uri - reference",
                "description": "A string containing the link's URL . ",
                "type": "string"
              }
            }
          },
          "type": "object"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "title": "Resource ID",
          "maxLength": 128
        },
        "type": {
          "description": "Resource type",
          "type": "string",
          "title": "type",
          "enum": ["paragraph--text_marginal"]
        }
      }
    },
    "media--remote_video--data": {
      "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
      "additionalProperties": false,
      "type": "object",
      "required": [
        "type",
        "id"
      ],
      "properties": {
        "relationships": {
          "description": "Entity relationships",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "uid": {
              "type": "object",
              "title": "Authored by",
              "properties": {"data": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "id": {
                    "format": "uuid",
                    "type": "string",
                    "title": "Resource ID",
                    "maxLength": 128
                  },
                  "type": {
                    "type": "string",
                    "title": "Referenced resource",
                    "enum": ["user--user"]
                  }
                }
              }}
            },
            "thumbnail": {
              "type": "object",
              "title": "Thumbnail",
              "properties": {"data": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "id": {
                    "format": "uuid",
                    "type": "string",
                    "title": "Resource ID",
                    "maxLength": 128
                  },
                  "type": {
                    "type": "string",
                    "title": "Referenced resource",
                    "enum": ["file--file"]
                  }
                }
              }}
            },
            "field_category": {
              "type": "object",
              "title": "Category",
              "properties": {"data": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "id": {
                    "format": "uuid",
                    "type": "string",
                    "title": "Resource ID",
                    "maxLength": 128
                  },
                  "type": {
                    "type": "string",
                    "title": "Referenced resource",
                    "enum": ["taxonomy_term--tags"]
                  }
                }
              }}
            },
            "field_image_reference": {
              "type": "object",
              "title": "Image",
              "properties": {"data": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "id": {
                    "format": "uuid",
                    "type": "string",
                    "title": "Resource ID",
                    "maxLength": 128
                  },
                  "type": {
                    "type": "string",
                    "title": "Referenced resource",
                    "enum": ["media--image"]
                  }
                }
              }}
            }
          }
        },
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "additionalProperties": true,
          "type": "object"
        },
        "attributes": {
          "description": "Entity attributes",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "field_description": {
              "type": "string",
              "title": "Description",
              "maxLength": 100
            },
            "field_publishing_date": {
              "title": "Publishing date",
              "type": "string"
            },
            "metatag": {
              "description": "The meta tags for the entity.",
              "type": "object",
              "title": "Metatags (Hidden field for JSON support)"
            },
            "field_media_oembed_video": {
              "type": "string",
              "title": "Video URL",
              "maxLength": 255
            },
            "field_play_time": {
              "type": "string",
              "title": "Play time",
              "maxLength": 15
            },
            "default_langcode": {
              "default": true,
              "description": "A flag indicating whether this is the default translation.",
              "type": "boolean",
              "title": "Default translation"
            },
            "field_title": {
              "type": "string",
              "title": "Title",
              "maxLength": 255
            },
            "drupal_internal__mid": {
              "type": "integer",
              "title": "ID"
            },
            "path": {
              "type": "object",
              "title": "URL alias",
              "properties": {
                "langcode": {
                  "type": "string",
                  "title": "Language"
                },
                "alias": {
                  "type": "string",
                  "title": "Path alias"
                },
                "pid": {
                  "type": "integer",
                  "title": "Path id"
                },
                "pathauto": {
                  "description": "Whether an automated alias should be created or not.",
                  "type": "integer",
                  "title": "Pathauto state"
                }
              },
              "required": ["pathauto"]
            },
            "langcode": {
              "type": "string",
              "title": "Language"
            },
            "field_industry_category": {
              "type": "array",
              "title": "Industry Category",
              "items": {
                "type": "string",
                "title": "Text value",
                "enum": [
                  "Banking",
                  "Insurance",
                  "Healthcare"
                ]
              }
            },
            "field_document_type": {
              "type": "string",
              "title": "Document type",
              "enum": [
                "Whitepaper",
                "Article",
                "Market Research",
                "Broschure",
                "Case Study",
                "Infographic",
                "Factsheet"
              ]
            },
            "name": {
              "default": "",
              "type": "string",
              "title": "Name",
              "maxLength": 255
            },
            "drupal_internal__vid": {
              "type": "integer",
              "title": "Revision ID"
            },
            "field_solution_category": {
              "type": "array",
              "title": "Solution Category",
              "items": {
                "type": "string",
                "title": "Text value",
                "enum": [
                  "Document Management Services",
                  "Business Process Services",
                  "Intelligent Automation",
                  "Digital Transformatoin"
                ]
              }
            },
            "status": {
              "default": true,
              "type": "boolean",
              "title": "Published"
            },
            "changed": {
              "format": "utc-millisec",
              "description": "The time the media item was last edited.",
              "type": "string",
              "title": "Changed"
            }
          },
          "required": [
            "drupal_internal__mid",
            "drupal_internal__vid",
            "name",
            "metatag",
            "path",
            "field_document_type",
            "field_media_oembed_video",
            "field_title"
          ]
        },
        "links": {
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": ["href"],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object"
              },
              "href": {
                "format": "uri - reference",
                "description": "A string containing the link's URL . ",
                "type": "string"
              }
            }
          },
          "type": "object"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "title": "Resource ID",
          "maxLength": 128
        },
        "type": {
          "description": "Resource type",
          "type": "string",
          "title": "type",
          "enum": ["media--remote_video"]
        }
      }
    },
    "menu_link_content--main--data": {
      "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
      "additionalProperties": false,
      "type": "object",
      "required": [
        "type",
        "id"
      ],
      "properties": {
        "relationships": {
          "description": "Entity relationships",
          "additionalProperties": false,
          "type": "object",
          "properties": {"field_cta_mainnav": {
            "type": "object",
            "title": "CTA ",
            "properties": {"data": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "id": {
                  "format": "uuid",
                  "type": "string",
                  "title": "Resource ID",
                  "maxLength": 128
                },
                "type": {
                  "type": "string",
                  "title": "Referenced resource",
                  "enum": ["paragraph--cta"]
                }
              }
            }}
          }}
        },
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "additionalProperties": true,
          "type": "object"
        },
        "attributes": {
          "description": "Entity attributes",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "parent": {
              "description": "The ID of the parent menu link plugin, or empty string when at the top level of the hierarchy.",
              "type": "string",
              "title": "Parent plugin ID",
              "maxLength": 255
            },
            "langcode": {
              "type": "string",
              "title": "Language"
            },
            "external": {
              "default": false,
              "description": "A flag to indicate if the link points to a full URL starting with a protocol, like http:// (1 = external, 0 = internal).",
              "type": "boolean",
              "title": "External"
            },
            "metatag": {
              "description": "The meta tags for the entity.",
              "type": "object",
              "title": "Metatags (Hidden field for JSON support)"
            },
            "menu_name": {
              "default": "tools",
              "description": "The menu name. All links with the same menu name (such as \\\"tools\\\") are part of the same menu.",
              "type": "string",
              "title": "Menu name",
              "maxLength": 255
            },
            "link": {
              "description": "The location this menu link points to.",
              "title": "Link",
              "type": "object",
              "properties": {
                "title": {"type": "string"},
                "uri": {"type": "string"},
                "uuid": {"type": "string"},
                "url": {"type": "string"}
              }
            },
            "description": {
              "description": "Shown when hovering over the menu link.",
              "type": "string",
              "title": "Description",
              "maxLength": 255
            },
            "weight": {
              "default": 0,
              "description": "Link weight among links in the same menu at the same depth. In the menu, the links with high weight will sink and links with a low weight will be positioned nearer the top.",
              "type": "integer",
              "title": "Weight"
            },
            "title": {
              "description": "The text to be used for this link in the menu.",
              "type": "string",
              "title": "Menu link title",
              "maxLength": 255
            },
            "enabled": {
              "default": true,
              "description": "A flag for whether the link should be enabled in menus or hidden.",
              "type": "boolean",
              "title": "Enabled"
            },
            "drupal_internal__id": {
              "description": "The entity ID for this menu link content entity.",
              "type": "integer",
              "title": "Entity ID"
            },
            "changed": {
              "format": "utc-millisec",
              "description": "The time that the menu link was last edited.",
              "type": "string",
              "title": "Changed"
            }
          },
          "required": [
            "drupal_internal__id",
            "title",
            "link",
            "metatag"
          ]
        },
        "links": {
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": ["href"],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object"
              },
              "href": {
                "format": "uri - reference",
                "description": "A string containing the link's URL . ",
                "type": "string"
              }
            }
          },
          "type": "object"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "title": "Resource ID",
          "maxLength": 128
        },
        "type": {
          "description": "Resource type",
          "type": "string",
          "title": "type",
          "enum": ["menu_link_content--main"]
        }
      }
    },
    "paragraph--free_text": {
      "description": "Describes the payload for 'paragraph' entities of the 'free_text' bundle.",
      "additionalProperties": true,
      "title": "paragraph:free_text Schema",
      "type": "object",
      "required": ["data"],
      "properties": {
        "jsonapi": {
          "description": "An object describing the server's implementation",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "version": {"type": "string"}
          }
        },
        "data": {"$ref": "#/definitions/paragraph--free_text--data"},
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "additionalProperties": true,
          "type": "object"
        },
        "links": {
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": ["href"],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object"
              },
              "href": {
                "format": "uri - reference",
                "description": "A string containing the link's URL . ",
                "type": "string"
              }
            }
          },
          "type": "object"
        }
      }
    },
    "media--document": {
      "description": "Describes the payload for 'media' entities of the 'document' bundle.",
      "additionalProperties": true,
      "title": "media:document Schema",
      "type": "object",
      "required": ["data"],
      "properties": {
        "jsonapi": {
          "description": "An object describing the server's implementation",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "version": {"type": "string"}
          }
        },
        "data": {"$ref": "#/definitions/media--document--data"},
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "additionalProperties": true,
          "type": "object"
        },
        "links": {
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": ["href"],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object"
              },
              "href": {
                "format": "uri - reference",
                "description": "A string containing the link's URL . ",
                "type": "string"
              }
            }
          },
          "type": "object"
        }
      }
    },
    "paragraph--divider": {
      "description": "Describes the payload for 'paragraph' entities of the 'divider' bundle.",
      "additionalProperties": true,
      "title": "paragraph:divider Schema",
      "type": "object",
      "required": ["data"],
      "properties": {
        "jsonapi": {
          "description": "An object describing the server's implementation",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "version": {"type": "string"}
          }
        },
        "data": {"$ref": "#/definitions/paragraph--divider--data"},
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "additionalProperties": true,
          "type": "object"
        },
        "links": {
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": ["href"],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object"
              },
              "href": {
                "format": "uri - reference",
                "description": "A string containing the link's URL . ",
                "type": "string"
              }
            }
          },
          "type": "object"
        }
      }
    },
    "paragraph--hero--data": {
      "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
      "additionalProperties": false,
      "type": "object",
      "required": [
        "type",
        "id"
      ],
      "properties": {
        "relationships": {
          "description": "Entity relationships",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "field_heroimage": {
              "type": "object",
              "title": "Hero Image",
              "properties": {"data": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "id": {
                    "format": "uuid",
                    "type": "string",
                    "title": "Resource ID",
                    "maxLength": 128
                  },
                  "type": {
                    "type": "string",
                    "title": "Referenced resource",
                    "enum": ["media--image"]
                  }
                }
              }}
            },
            "field_references": {
              "type": "object",
              "title": "References",
              "properties": {"data": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "id": {
                    "format": "uuid",
                    "type": "string",
                    "title": "Resource ID",
                    "maxLength": 128
                  },
                  "type": {
                    "type": "string",
                    "title": "Referenced resource",
                    "enum": ["media--document"]
                  }
                }
              }}
            }
          }
        },
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "additionalProperties": true,
          "type": "object"
        },
        "attributes": {
          "description": "Entity attributes",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "langcode": {
              "type": "string",
              "title": "Language"
            },
            "field_bg_color_paragraph": {
              "type": "object",
              "title": "Subheadline Textcolor",
              "properties": {
                "color": {
                  "type": "string",
                  "title": "Color"
                },
                "opacity": {
                  "type": "float",
                  "title": "Opacity"
                }
              }
            },
            "field_sub_headline_hero": {
              "type": "string",
              "title": "Subheadline",
              "maxLength": 160
            },
            "field_link_hero": {
              "title": "Link",
              "type": "object",
              "properties": {
                "title": {"type": "string"},
                "uri": {"type": "string"},
                "uuid": {"type": "string"},
                "url": {"type": "string"}
              }
            },
            "field_overlay_color_hero": {
              "type": "object",
              "title": "Overlay color",
              "properties": {
                "color": {
                  "type": "string",
                  "title": "Color"
                },
                "opacity": {
                  "type": "float",
                  "title": "Opacity"
                }
              }
            },
            "drupal_internal__id": {
              "type": "integer",
              "title": "ID"
            },
            "field_headline_hero": {
              "type": "string",
              "title": "Headline",
              "maxLength": 255
            }
          },
          "required": [
            "drupal_internal__id",
            "field_headline_hero",
            "field_sub_headline_hero"
          ]
        },
        "links": {
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": ["href"],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object"
              },
              "href": {
                "format": "uri - reference",
                "description": "A string containing the link's URL . ",
                "type": "string"
              }
            }
          },
          "type": "object"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "title": "Resource ID",
          "maxLength": 128
        },
        "type": {
          "description": "Resource type",
          "type": "string",
          "title": "type",
          "enum": ["paragraph--hero"]
        }
      }
    },
    "node--page--data": {
      "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
      "additionalProperties": false,
      "type": "object",
      "required": [
        "type",
        "id"
      ],
      "properties": {
        "relationships": {
          "description": "Entity relationships",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "menu_link": {
              "type": "object",
              "title": "Menu link",
              "properties": {"data": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "id": {
                    "format": "uuid",
                    "type": "string",
                    "title": "Resource ID",
                    "maxLength": 128
                  },
                  "type": {
                    "type": "string",
                    "title": "Referenced resource"
                  }
                }
              }}
            },
            "field_hero_content": {
              "type": "object",
              "title": "Hero",
              "properties": {"data": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "id": {
                    "format": "uuid",
                    "type": "string",
                    "title": "Resource ID",
                    "maxLength": 128
                  },
                  "type": {
                    "type": "string",
                    "title": "Referenced resource",
                    "enum": ["paragraph--hero"]
                  }
                }
              }}
            },
            "node_type": {
              "type": "object",
              "title": "Content type",
              "properties": {"data": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "id": {
                    "format": "uuid",
                    "type": "string",
                    "title": "Resource ID",
                    "maxLength": 128
                  },
                  "type": {
                    "type": "string",
                    "title": "Referenced resource",
                    "enum": ["node_type--node_type"]
                  }
                }
              }}
            },
            "field_component": {
              "type": "object",
              "title": "Component",
              "properties": {"data": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "type",
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "format": "uuid",
                      "type": "string",
                      "title": "Resource ID",
                      "maxLength": 128
                    },
                    "type": {
                      "type": "string",
                      "title": "Referenced resource",
                      "enum": [
                        "paragraph--text_media_box",
                        "paragraph--cta",
                        "paragraph--section_headline",
                        "paragraph--divider",
                        "paragraph--free_text",
                        "paragraph--testimonial_slider",
                        "paragraph--related_items",
                        "paragraph--from_library",
                        "paragraph--text_marginal",
                        "paragraph--multiple_column",
                        "paragraph--related_solutions"
                      ]
                    }
                  }
                }
              }}
            },
            "field_teaser_image_page": {
              "type": "object",
              "title": "Teaser Image",
              "properties": {"data": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "id": {
                    "format": "uuid",
                    "type": "string",
                    "title": "Resource ID",
                    "maxLength": 128
                  },
                  "type": {
                    "type": "string",
                    "title": "Referenced resource",
                    "enum": ["media--image"]
                  }
                }
              }}
            }
          }
        },
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "additionalProperties": true,
          "type": "object"
        },
        "attributes": {
          "description": "Entity attributes",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "metatag": {
              "oneOf": [
                {"type": "object"},
                {"type": "array"},
                {"type": "null"}
              ],
              "description": "The meta tags for the entity.",
              "title": "Metatags (Hidden field for JSON support)"
            },
            "created": {
              "format": "utc-millisec",
              "description": "The time that the node was created.",
              "type": "string",
              "title": "Authored on"
            },
            "field_path": {
              "type": "string",
              "title": "path"
            },
            "title": {
              "type": "string",
              "title": "Title",
              "maxLength": 255
            },
            "field_teaser_headline_page": {
              "type": "string",
              "title": "Teaser Headline",
              "maxLength": 50
            },
            "drupal_internal__nid": {
              "type": "integer",
              "title": "ID"
            },
            "path": {
              "type": "object",
              "title": "URL alias",
              "properties": {
                "langcode": {
                  "type": "string",
                  "title": "Language"
                },
                "alias": {
                  "type": "string",
                  "title": "Path alias"
                },
                "pid": {
                  "type": "integer",
                  "title": "Path id"
                },
                "pathauto": {
                  "description": "Whether an automated alias should be created or not.",
                  "type": "integer",
                  "title": "Pathauto state"
                }
              },
              "required": ["pathauto"]
            },
            "langcode": {
              "type": "string",
              "title": "Language"
            },
            "field_breadcrumb": {
              "default": "yes",
              "type": "string",
              "title": "Breadcrumb",
              "enum": [
                "yes",
                "no"
              ]
            },
            "field_seo_basicpage": {
              "title": "SEO",
              "type": "object",
              "properties": {
                "next": {"type": "string"},
                "expires": {"type": "string"},
                "geo_region": {"type": "string"},
                "keywords": {"type": "string"},
                "standout": {"type": "string"},
                "prev": {"type": "string"},
                "rating": {"type": "string"},
                "description": {"type": "string"},
                "generator": {"type": "string"},
                "abstract_text": {"type": "string"},
                "title": {"type": "string"},
                "content_language": {"type": "string"},
                "geo_position": {"type": "string"},
                "icbm": {"type": "string"},
                "set_cookie": {"type": "string"},
                "news_keywords": {"type": "string"},
                "rights": {"type": "string"},
                "robots": {"type": "string"},
                "revisit_after": {"type": "string"},
                "shortlink": {"type": "string"},
                "author": {"type": "string"},
                "cache_control": {"type": "string"},
                "refresh": {"type": "string"},
                "google": {"type": "string"},
                "canonical_url": {"type": "string"},
                "image_src": {"type": "string"},
                "original_source": {"type": "string"},
                "pragma": {"type": "string"},
                "referrer": {"type": "string"},
                "geo_placename": {"type": "string"}
              }
            },
            "field_teaser_link_page": {
              "title": "Teaser Link",
              "type": "object",
              "properties": {
                "title": {"type": "string"},
                "uri": {"type": "string"},
                "uuid": {"type": "string"},
                "url": {"type": "string"}
              }
            },
            "field_teaser_subheadline_page": {
              "type": "string",
              "title": "Teaser Subheadline"
            },
            "status": {
              "default": true,
              "type": "boolean",
              "title": "Published"
            },
            "changed": {
              "format": "utc-millisec",
              "description": "The time that the node was last edited.",
              "type": "string",
              "title": "Changed"
            }
          },
          "required": [
            "drupal_internal__nid",
            "title",
            "metatag",
            "path"
          ]
        },
        "links": {
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": ["href"],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object"
              },
              "href": {
                "format": "uri - reference",
                "description": "A string containing the link's URL . ",
                "type": "string"
              }
            }
          },
          "type": "object"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "title": "Resource ID",
          "maxLength": 128
        },
        "type": {
          "description": "Resource type",
          "type": "string",
          "title": "type",
          "enum": ["node--page"]
        }
      }
    },
    "media--image": {
      "description": "Describes the payload for 'media' entities of the 'image' bundle.",
      "additionalProperties": true,
      "title": "media:image Schema",
      "type": "object",
      "required": ["data"],
      "properties": {
        "jsonapi": {
          "description": "An object describing the server's implementation",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "version": {"type": "string"}
          }
        },
        "data": {"$ref": "#/definitions/media--image--data"},
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "additionalProperties": true,
          "type": "object"
        },
        "links": {
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": ["href"],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object"
              },
              "href": {
                "format": "uri - reference",
                "description": "A string containing the link's URL . ",
                "type": "string"
              }
            }
          },
          "type": "object"
        }
      }
    },
    "paragraph--testimonial": {
      "description": "Describes the payload for 'paragraph' entities of the 'testimonial' bundle.",
      "additionalProperties": true,
      "title": "paragraph:testimonial Schema",
      "type": "object",
      "required": ["data"],
      "properties": {
        "jsonapi": {
          "description": "An object describing the server's implementation",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "meta": {
              "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
              "additionalProperties": true,
              "type": "object"
            },
            "version": {"type": "string"}
          }
        },
        "data": {"$ref": "#/definitions/paragraph--testimonial--data"},
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "additionalProperties": true,
          "type": "object"
        },
        "links": {
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": ["href"],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object"
              },
              "href": {
                "format": "uri - reference",
                "description": "A string containing the link's URL . ",
                "type": "string"
              }
            }
          },
          "type": "object"
        }
      }
    },
    "path_alias--path_alias--data": {
      "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
      "additionalProperties": false,
      "type": "object",
      "required": [
        "type",
        "id"
      ],
      "properties": {
        "relationships": {
          "description": "Members of the relationships object('relationships\\\") represent references from the resource object in which it's defined to other resource objects . ",
          "additionalProperties": false,
          "type": "object"
        },
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "additionalProperties": true,
          "type": "object"
        },
        "attributes": {
          "description": "Entity attributes",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "path": {
              "description": "The path that this alias belongs to.",
              "type": "string",
              "title": "System path",
              "maxLength": 255
            },
            "revision_default": {
              "description": "A flag indicating whether this was a default revision when it was saved.",
              "type": "boolean",
              "title": "Default revision"
            },
            "langcode": {
              "type": "string",
              "title": "Language"
            },
            "drupal_internal__revision_id": {
              "type": "integer",
              "title": "Revision ID"
            },
            "alias": {
              "description": "An alias used with this path.",
              "type": "string",
              "title": "URL alias",
              "maxLength": 255
            },
            "drupal_internal__id": {
              "type": "integer",
              "title": "ID"
            },
            "status": {
              "default": true,
              "type": "boolean",
              "title": "Published"
            }
          },
          "required": [
            "drupal_internal__id",
            "drupal_internal__revision_id",
            "path",
            "alias"
          ]
        },
        "links": {
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": ["href"],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object"
              },
              "href": {
                "format": "uri - reference",
                "description": "A string containing the link's URL . ",
                "type": "string"
              }
            }
          },
          "type": "object"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "title": "Resource ID",
          "maxLength": 128
        },
        "type": {
          "description": "Resource type",
          "type": "string",
          "title": "type",
          "enum": ["path_alias--path_alias"]
        }
      }
    },
    "paragraph--section_headline--data": {
      "description": "\\\"Resource objects\\\" appear in a JSON:API document to represent resources.",
      "additionalProperties": false,
      "type": "object",
      "required": [
        "type",
        "id"
      ],
      "properties": {
        "relationships": {
          "description": "Entity relationships",
          "additionalProperties": false,
          "type": "object",
          "properties": {"paragraph_type": {
            "type": "object",
            "title": "Paragraph type",
            "properties": {"data": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "id": {
                  "format": "uuid",
                  "type": "string",
                  "title": "Resource ID",
                  "maxLength": 128
                },
                "type": {
                  "type": "string",
                  "title": "Referenced resource",
                  "enum": ["paragraphs_type--paragraphs_type"]
                }
              }
            }}
          }}
        },
        "meta": {
          "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
          "additionalProperties": true,
          "type": "object"
        },
        "attributes": {
          "description": "Entity attributes",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "revision_default": {
              "description": "A flag indicating whether this was a default revision when it was saved.",
              "type": "boolean",
              "title": "Default revision"
            },
            "drupal_internal__revision_id": {
              "type": "integer",
              "title": "Revision ID"
            },
            "field_bg_color_paragraph": {
              "type": "object",
              "title": "Background Color",
              "properties": {
                "color": {
                  "type": "string",
                  "title": "Color"
                },
                "opacity": {
                  "type": "float",
                  "title": "Opacity"
                }
              }
            },
            "field_margin_top": {
              "default": 1,
              "type": "integer",
              "title": "Margin Top"
            },
            "created": {
              "format": "utc-millisec",
              "description": "The time that the Paragraph was created.",
              "type": "string",
              "title": "Authored on"
            },
            "default_langcode": {
              "default": true,
              "description": "A flag indicating whether this is the default translation.",
              "type": "boolean",
              "title": "Default translation"
            },
            "field_headline_sh": {
              "type": "string",
              "title": "Overline",
              "maxLength": 20
            },
            "parent_type": {
              "description": "The entity parent type to which this entity is referenced.",
              "type": "string",
              "title": "Parent type",
              "maxLength": 32
            },
            "revision_translation_affected": {
              "description": "Indicates if the last edit of a translation belongs to current revision.",
              "type": "boolean",
              "title": "Revision translation affected"
            },
            "field_title_sh": {
              "type": "string",
              "title": "Headline",
              "maxLength": 55
            },
            "drupal_internal__id": {
              "type": "integer",
              "title": "ID"
            },
            "field_margin_bottom": {
              "default": 1,
              "type": "integer",
              "title": "Margin Bottom"
            },
            "parent_field_name": {
              "description": "The entity parent field name to which this entity is referenced.",
              "type": "string",
              "title": "Parent field name",
              "maxLength": 32
            },
            "langcode": {
              "type": "string",
              "title": "Language"
            },
            "field_link_sh": {
              "title": "Link",
              "type": "object",
              "properties": {
                "title": {"type": "string"},
                "uri": {"type": "string"},
                "uuid": {"type": "string"},
                "url": {"type": "string"}
              }
            },
            "parent_id": {
              "description": "The ID of the parent entity of which this entity is referenced.",
              "type": "string",
              "title": "Parent ID",
              "maxLength": 255
            },
            "field_hide_section_pragraph": {
              "type": "boolean",
              "title": "Hide section"
            },
            "behavior_settings": {
              "default": "a:0:{}",
              "description": "The behavior plugin settings",
              "type": "string",
              "title": "Behavior settings"
            },
            "status": {
              "default": true,
              "type": "boolean",
              "title": "Published"
            }
          },
          "required": [
            "drupal_internal__id",
            "drupal_internal__revision_id",
            "revision_translation_affected",
            "field_title_sh"
          ]
        },
        "links": {
          "additionalProperties": {
            "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object . ",
            "type": "object",
            "required": ["href"],
            "properties": {
              "meta": {
                "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
                "additionalProperties": true,
                "type": "object"
              },
              "href": {
                "format": "uri - reference",
                "description": "A string containing the link's URL . ",
                "type": "string"
              }
            }
          },
          "type": "object"
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "title": "Resource ID",
          "maxLength": 128
        },
        "type": {
          "description": "Resource type",
          "type": "string",
          "title": "type",
          "enum": ["paragraph--section_headline"]
        }
      }
    }
  },
  "swagger": "2.0",
  "info": {
    "description": "This is a JSON API compliant implementation",
    "title": "Bahn BKK - JSON API",
    "version": "Versioning not supported"
  },
  "tags": [
    {"name": "File"},
    {
      "x-entity-type": "media",
      "name": "Media - Document",
      "description": "Media type Document of type Media. An uploaded file or document, such as a PDF.",
      "x-definition": {"$ref": "#/definitions/media--document"}
    },
    {
      "x-entity-type": "media",
      "name": "Media - Image",
      "description": "Media type Image of type Media. Use local images for reusable media.",
      "x-definition": {"$ref": "#/definitions/media--image"}
    },
    {
      "x-entity-type": "media",
      "name": "Media - Remote video",
      "description": "Media type Remote video of type Media. A remotely hosted video from YouTube or Vimeo.",
      "x-definition": {"$ref": "#/definitions/media--remote_video"}
    },
    {
      "x-entity-type": "menu_link_content",
      "name": "Custom menu link - Footer",
      "description": "Menu Footer of type Custom menu link. Site information links",
      "x-definition": {"$ref": "#/definitions/menu_link_content--footer"}
    },
    {
      "x-entity-type": "menu_link_content",
      "name": "Custom menu link - Main navigation",
      "description": "Menu Main navigation of type Custom menu link. Site section links",
      "x-definition": {"$ref": "#/definitions/menu_link_content--main"}
    },
    {
      "x-entity-type": "node",
      "name": "Content - Neuigkeiten",
      "description": "Content type Neuigkeiten of type Content. ",
      "x-definition": {"$ref": "#/definitions/node--neuigkeiten"}
    },
    {
      "x-entity-type": "node",
      "name": "Content - Basic page",
      "description": "Content type Basic page of type Content. Use <em>basic pages</em> for your static content, such as an 'About us' page.",
      "x-definition": {"$ref": "#/definitions/node--page"}
    },
    {"name": "URL alias"},
    {
      "name": "Search page",
      "description": "Configuration entity Search page"
    },
    {
      "name": "Search index",
      "description": "Configuration entity Search index"
    },
    {
      "x-entity-type": "paragraph",
      "name": "Paragraph - CTA",
      "description": "Paragraph type CTA of type Paragraph. CTA",
      "x-definition": {"$ref": "#/definitions/paragraph--cta"}
    },
    {
      "x-entity-type": "paragraph",
      "name": "Paragraph - Divider",
      "description": "Paragraph type Divider of type Paragraph. Divider",
      "x-definition": {"$ref": "#/definitions/paragraph--divider"}
    },
    {
      "x-entity-type": "paragraph",
      "name": "Paragraph - Free text",
      "description": "Paragraph type Free text of type Paragraph. ",
      "x-definition": {"$ref": "#/definitions/paragraph--free_text"}
    },
    {
      "x-entity-type": "paragraph",
      "name": "Paragraph - Hero",
      "description": "Paragraph type Hero of type Paragraph. ",
      "x-definition": {"$ref": "#/definitions/paragraph--hero"}
    },
    {
      "x-entity-type": "paragraph",
      "name": "Paragraph - Hero Slider",
      "description": "Paragraph type Hero Slider of type Paragraph. Hero Slider",
      "x-definition": {"$ref": "#/definitions/paragraph--hero_slider"}
    },
    {
      "x-entity-type": "paragraph",
      "name": "Paragraph - Multiple Column",
      "description": "Paragraph type Multiple Column of type Paragraph. Multiple Column",
      "x-definition": {"$ref": "#/definitions/paragraph--multiple_column"}
    },
    {
      "x-entity-type": "paragraph",
      "name": "Paragraph - Multiple Column Item",
      "description": "Paragraph type Multiple Column Item of type Paragraph. Multiple Column Item",
      "x-definition": {"$ref": "#/definitions/paragraph--multiple_column_item"}
    },
    {
      "x-entity-type": "paragraph",
      "name": "Paragraph - Related Items",
      "description": "Paragraph type Related Items of type Paragraph. ",
      "x-definition": {"$ref": "#/definitions/paragraph--related_items"}
    },
    {
      "x-entity-type": "paragraph",
      "name": "Paragraph - Related Solutions",
      "description": "Paragraph type Related Solutions of type Paragraph. Related Solutions",
      "x-definition": {"$ref": "#/definitions/paragraph--related_solutions"}
    },
    {
      "x-entity-type": "paragraph",
      "name": "Paragraph - Section Headline",
      "description": "Paragraph type Section Headline of type Paragraph. Section Headline ",
      "x-definition": {"$ref": "#/definitions/paragraph--section_headline"}
    },
    {
      "x-entity-type": "paragraph",
      "name": "Paragraph - Testimonial",
      "description": "Paragraph type Testimonial of type Paragraph. ",
      "x-definition": {"$ref": "#/definitions/paragraph--testimonial"}
    },
    {
      "x-entity-type": "paragraph",
      "name": "Paragraph - Testimonial Slider",
      "description": "Paragraph type Testimonial Slider of type Paragraph. ",
      "x-definition": {"$ref": "#/definitions/paragraph--testimonial_slider"}
    },
    {
      "x-entity-type": "paragraph",
      "name": "Paragraph - Text Marginal",
      "description": "Paragraph type Text Marginal of type Paragraph. Text Marginal",
      "x-definition": {"$ref": "#/definitions/paragraph--text_marginal"}
    },
    {
      "x-entity-type": "paragraph",
      "name": "Paragraph - Text Media Box",
      "description": "Paragraph type Text Media Box of type Paragraph. ",
      "x-definition": {"$ref": "#/definitions/paragraph--text_media_box"}
    }
  ],
  "consumes": ["application/vnd.api+json"]
}